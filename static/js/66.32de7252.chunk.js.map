{"version":3,"file":"static/js/66.32de7252.chunk.js","mappings":"wQAmBA,MA0NA,EA1NwBA,KACtB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,KAC5CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,KAChCS,EAAiBC,IAAsBV,EAAAA,EAAAA,WAAS,IAChDW,EAASC,IAAcZ,EAAAA,EAAAA,WAAS,IAChCa,EAAUC,IAAed,EAAAA,EAAAA,UAAS,CACvCe,WAAY,GACZC,QAAS,GACTC,OAAQ,MAGVC,EAAAA,EAAAA,YAAU,KAKRC,EAAAA,EACGC,IAAI,wDACJC,MAAMC,IACL,MAEMC,EAAmB,CACvB,yBAHWD,EAASE,KAIZC,KAAKC,IAAI,CACfC,MAAOD,EAAKE,gBACZC,MAAOH,EAAKI,aAIhB5B,EAAeqB,EAAiB,IAEjCQ,OAAOC,IACNC,QAAQD,MAAM,SAAUA,EAAM,GApBtB,GACX,IA0GH,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAAAD,UACJE,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,SA5CQC,UACnBC,EAAEC,iBACF/B,GAAW,GACXqB,QAAQW,IAAI9C,GACZmC,QAAQW,IAAIzC,GAEZ,MAAM0C,EAAW,CACf9B,WAAYF,EAASE,WACrBC,QAASH,EAASG,QAClBc,QAAShC,EACTgD,aAAcjC,EAASI,OACvB8B,SAAU5C,GAGZ,IACE,MAAMmB,QAAiBH,EAAAA,EAAM6B,KAC3B,+EACAH,GAEFI,IAAAA,KAAU,CACRC,MAAO,WACPC,KAAK,8BACLC,KAAM,UACNC,kBAAmB,OAClBhC,MAAMiC,IACHA,EAAOC,cACTC,OAAOC,SAASC,KAAO,SACvBzB,QAAQW,IAAI,6BAA8BtB,EAASE,MACrD,GAEJ,CAAE,MAAOQ,GACP,GAAIA,EAAMV,UAAYU,EAAMV,SAASE,MAAQQ,EAAMV,SAASE,KAAKjB,QAAS,CACxE,MAAMoD,EACH3B,EAAMV,UAAYU,EAAMV,SAASE,MAAQQ,EAAMV,SAASE,KAAKjB,SAC9DyB,EAAMzB,SACNyB,EAAM4B,WACRpD,EAAWmD,EACb,CACA/C,GAAW,EACb,GAKkCwB,SAAA,EAC5BF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,CAAAzB,SAAC,sBACbF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CAAA1B,UACRE,EAAAA,EAAAA,MAACyB,EAAAA,GAAI,CAAA3B,SAAA,EACHF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAI,GAAG7B,UACXF,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,CAACC,UAAU,OAAM/B,UAC3BF,EAAAA,EAAAA,KAACkC,EAAAA,GAAU,CACTC,KAAK,aACLC,YAAY,aACZC,cAAc,aACd1C,MAAOhB,EAASE,WAChByD,UAAQ,EACRC,SAAW/B,GAAM5B,EAAY,IAAKD,EAAUE,WAAY2B,EAAEgC,OAAO7C,eAIvEK,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAI,GAAG7B,UACXF,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,CAACC,UAAU,OAAM/B,UAC3BF,EAAAA,EAAAA,KAACkC,EAAAA,GAAU,CACTC,KAAK,UACLC,YAAY,UACZC,cAAc,UACd1C,MAAOhB,EAASG,QAChBwD,UAAQ,EACRC,SAAW/B,GAAM5B,EAAY,IAAKD,EAAUG,QAAS0B,EAAEgC,OAAO7C,eAIpEK,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAI,GAAG7B,UACXF,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,CAACC,UAAU,OAAM/B,UAC3BF,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACV,aAAW,yBACX9C,MAAO/B,EACP2E,SA/FcG,IAC9B,MAAMC,EAAgBD,EAAMF,OAAO7C,MAzBrC,IAAqBiD,EA0BnB/E,EAAgB8E,GAChBnE,EAAqC,wBAAlBmE,GACG,wBAAlBA,EAEFvE,EAAgB,KA9BCwE,EAiCLD,EAhCd1D,EAAAA,EACGC,IAAI,yDACJC,MAAMC,IACL,MAAME,EAAOF,EAASE,KAChBuD,EAAkBC,SAASF,EAAY,IACvCG,EAAgBzD,EAAK0D,QAAQC,GAAUA,EAAMrD,UAAYiD,IAC/D9C,QAAQW,IAAIkC,GACZ7C,QAAQW,IAAIqC,GACZ,MAAMG,EAAe,CACnB,qBACGH,EAAcxD,KAAK0D,IAAK,CACzBxD,MAAOwD,EAAME,KACbxD,MAAOsD,EAAMpC,cAIjBzC,EAAgB8E,EAAa,IAE9BrD,OAAOC,IACNC,QAAQD,MAAM,SAAUA,EAAM,IAclC,EAsFgBsD,QAASrF,SAIfiC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAI,GAAG7B,UACXF,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,CAACC,UAAU,OAAM/B,UAC3BF,EAAAA,EAAAA,KAACkC,EAAAA,GAAU,CACTC,KAAK,SACLC,YAAY,SACZC,cAAc,SACd1C,MAAOhB,EAASI,OAChBuD,UAAQ,EACRC,SAAW/B,GAAM5B,EAAY,IAAKD,EAAUI,OAAQyB,EAAEgC,OAAO7C,eAInEK,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAI,GAAG7B,UACXF,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,CAACC,UAAU,OAAM/B,UAC3BF,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACV,aAAW,yBACX9C,MAAO1B,EACPsE,SAxGeG,IAC/B,MAAMW,EAAqBX,EAAMF,OAAO7C,MACxCzB,EAAiBmF,EAAmB,EAuGpBD,QAASjF,EACTmF,SAAU/E,cAMpB6B,EAAAA,EAAAA,MAACmD,EAAAA,GAAW,CAAArD,SAAA,EACVE,EAAAA,EAAAA,MAACyB,EAAAA,GAAI,CAAA3B,SAAA,EACHF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAAC0B,GAAI,EAAEtD,UACVF,EAAAA,EAAAA,KAACyD,EAAAA,GAAI,CAACC,GAAI,SAASxD,UACjBF,EAAAA,EAAAA,KAAC2D,EAAAA,GAAO,CAACC,MAAM,SAASC,QAAQ,UAAU5B,UAAU,OAAOjB,MAAM,OAAMd,SAAC,cAK5EF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAI,EAAE7B,SACTzB,GACCuB,EAAAA,EAAAA,KAAC2D,EAAAA,GAAO,CAACC,MAAM,UAAUC,QAAQ,UAAUC,KAAK,SAASR,UAAQ,EAAApD,UAC/DF,EAAAA,EAAAA,KAAC+D,EAAAA,GAAQ,CAACH,MAAM,OAAOI,KAAK,UAG9BhE,EAAAA,EAAAA,KAAC2D,EAAAA,GAAO,CAACC,MAAM,UAAUC,QAAQ,UAAUC,KAAK,SAAQ5D,SAAC,iBAM/DF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAI,CAACI,UAAU,OAAM/B,SACnB7B,IAAW2B,EAAAA,EAAAA,KAAA,KAAGiC,UAAU,mCAAkC/B,SAAE7B,eAKpE,C","sources":["views/koordinator/lapak/FormTambahLapak.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Swal from 'sweetalert2'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CRow,\n  CSpinner,\n  CFormSelect,\n} from '@coreui/react'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nconst FormTambahLapak = () => {\n  const [selectedArea, setSelectedArea] = useState('') // Nilai opsi yang dipilih\n  const [optionsArea, setOptionsArea] = useState([]) // Array untuk menyimpan opsi dari API\n  const [selectedKurir, setSelectedKurir] = useState('') // Nilai opsi yang dipilih\n  const [optionsKurir, setOptionsKurir] = useState([]) // Array untuk menyimpan opsi dari API\n  const [message, setMessage] = useState('')\n  const [isKurirDisabled, setIsKurirDisabled] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    nama_lapak: '',\n    no_telp: '',\n    alamat: '',\n  })\n\n  useEffect(() => {\n    handleArea() // Memanggil fungsi handleArea saat komponen dimuat\n  }, [])\n\n  function handleArea() {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/area')\n      .then((response) => {\n        const data = response.data // Mengakses data dari respons API\n\n        const formattedOptions = [\n          '--Pilih Kecamatan--',\n          ...data.map((area) => ({\n            label: area.area_distribusi, // Ganti dengan properti yang sesuai dari API area\n            value: area.area_id, // Ganti dengan properti yang sesuai dari API area\n          })),\n        ]\n        // Menyimpan data opsi ke dalam state\n        setOptionsArea(formattedOptions)\n      })\n      .catch((error) => {\n        console.error('Error:', error)\n      })\n  }\n\n  function handleKurir(area_lapak) {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/kurir')\n      .then((response) => {\n        const data = response.data // Pastikan respons dari API kurir mengandung data kurir yang benar\n        const areaLapakString = parseInt(area_lapak, 10)\n        const filteredKurir = data.filter((kurir) => kurir.area_id === areaLapakString)\n        console.log(area_lapak)\n        console.log(filteredKurir)\n        const OptionsKurir = [\n          '--Pilih Kurir--',\n          ...filteredKurir.map((kurir) => ({\n            label: kurir.nama, // Ganti dengan properti yang sesuai dari API area\n            value: kurir.id_kurir, // Ganti dengan properti yang sesuai dari API area\n          })),\n        ]\n        // Menyimpan data opsi ke dalam state\n        setOptionsKurir(OptionsKurir)\n      })\n      .catch((error) => {\n        console.error('Error:', error)\n      })\n  }\n\n  const handleSelectChangeArea = (event) => {\n    const selectedValue = event.target.value\n    setSelectedArea(selectedValue)\n    setIsKurirDisabled(selectedValue === '--Pilih Kecamatan--')\n    if (selectedValue === '--Pilih Kecamatan--') {\n      // Jika '--Pilih Kecamatan--' dipilih, set opsi kurir menjadi kosong\n      setOptionsKurir([])\n    } else {\n      // Jika nilai valid dipilih, ambil kurir berdasarkan nilai tersebut\n      handleKurir(selectedValue)\n    }\n  }\n\n  const handleSelectChangeKurir = (event) => {\n    const selectedValueKurir = event.target.value\n    setSelectedKurir(selectedValueKurir)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    console.log(selectedArea)\n    console.log(selectedKurir)\n\n    const newLapak = {\n      nama_lapak: formData.nama_lapak,\n      no_telp: formData.no_telp,\n      area_id: selectedArea,\n      alamat_lapak: formData.alamat,\n      id_kurir: selectedKurir,\n    }\n\n    try {\n      const response = await axios.post(\n        'https://be-myroti-production.up.railway.app/api/koordinator/lapak/registrasi',\n        newLapak,\n      )\n      Swal.fire({\n        title: 'Berhasil',\n        text: `Lapak baru berhasil dibuat.`,\n        icon: 'success',\n        confirmButtonText: 'OK',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          window.location.href = '/lapak'\n          console.log('Roti created successfully:', response.data)\n        }\n      })\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.message) {\n        const resMessage =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n        setMessage(resMessage)\n      }\n      setLoading(false)\n    }\n  }\n  return (\n    <>\n      <CCard>\n        <CForm onSubmit={handleSubmit}>\n          <CCardHeader>Form Tambah Roti</CCardHeader>\n          <CCardBody>\n            <CRow>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormInput\n                    name=\"nama_lapak\"\n                    placeholder=\"Nama Lapak\"\n                    floatingLabel=\"Nama Lapak\"\n                    value={formData.nama_lapak}\n                    required\n                    onChange={(e) => setFormData({ ...formData, nama_lapak: e.target.value })}\n                  />\n                </CInputGroup>\n              </CCol>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormInput\n                    name=\"no_telp\"\n                    placeholder=\"No Telp\"\n                    floatingLabel=\"No Telp\"\n                    value={formData.no_telp}\n                    required\n                    onChange={(e) => setFormData({ ...formData, no_telp: e.target.value })}\n                  />\n                </CInputGroup>\n              </CCol>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    value={selectedArea}\n                    onChange={handleSelectChangeArea}\n                    options={optionsArea}\n                  ></CFormSelect>\n                </CInputGroup>\n              </CCol>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormInput\n                    name=\"alamat\"\n                    placeholder=\"Alamat\"\n                    floatingLabel=\"Alamat\"\n                    value={formData.alamat}\n                    required\n                    onChange={(e) => setFormData({ ...formData, alamat: e.target.value })}\n                  />\n                </CInputGroup>\n              </CCol>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    value={selectedKurir}\n                    onChange={handleSelectChangeKurir}\n                    options={optionsKurir}\n                    disabled={isKurirDisabled}\n                  ></CFormSelect>\n                </CInputGroup>\n              </CCol>\n            </CRow>\n          </CCardBody>\n          <CCardFooter>\n            <CRow>\n              <CCol md={1}>\n                <Link to={'/lapak'}>\n                  <CButton color=\"danger\" variant=\"outline\" className=\"ms-2\" title=\"Back\">\n                    Back\n                  </CButton>\n                </Link>\n              </CCol>\n              <CCol xs={1}>\n                {loading ? (\n                  <CButton color=\"primary\" variant=\"outline\" type=\"submit\" disabled>\n                    <CSpinner color=\"info\" size=\"sm\" />\n                  </CButton>\n                ) : (\n                  <CButton color=\"primary\" variant=\"outline\" type=\"submit\">\n                    Submit\n                  </CButton>\n                )}\n              </CCol>\n            </CRow>\n            <CRow className=\"mt-2\">\n              {message && <p className=\"error-message alert alert-danger\">{message}</p>}\n            </CRow>\n          </CCardFooter>\n        </CForm>\n      </CCard>\n    </>\n  )\n}\nexport default FormTambahLapak\n"],"names":["FormTambahLapak","selectedArea","setSelectedArea","useState","optionsArea","setOptionsArea","selectedKurir","setSelectedKurir","optionsKurir","setOptionsKurir","message","setMessage","isKurirDisabled","setIsKurirDisabled","loading","setLoading","formData","setFormData","nama_lapak","no_telp","alamat","useEffect","axios","get","then","response","formattedOptions","data","map","area","label","area_distribusi","value","area_id","catch","error","console","_jsx","_Fragment","children","CCard","_jsxs","CForm","onSubmit","async","e","preventDefault","log","newLapak","alamat_lapak","id_kurir","post","Swal","title","text","icon","confirmButtonText","result","isConfirmed","window","location","href","resMessage","toString","CCardHeader","CCardBody","CRow","CCol","xs","CInputGroup","className","CFormInput","name","placeholder","floatingLabel","required","onChange","target","CFormSelect","event","selectedValue","area_lapak","areaLapakString","parseInt","filteredKurir","filter","kurir","OptionsKurir","nama","options","selectedValueKurir","disabled","CCardFooter","md","Link","to","CButton","color","variant","type","CSpinner","size"],"sourceRoot":""}