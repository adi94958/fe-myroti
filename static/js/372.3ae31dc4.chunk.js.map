{"version":3,"file":"static/js/372.3ae31dc4.chunk.js","mappings":"+PA+BA,MAuRA,EAvRuBA,KACrB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,KAC5CS,EAAaC,IAAkBV,EAAAA,EAAAA,UAAS,IACxCW,EAAcC,IAAmBZ,EAAAA,EAAAA,UAAS,IAC3Ca,EAAsB,CAAC,GAAI,GAAI,GAAIN,EAAcO,SAEvDC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAClDd,EAAWU,EAAUK,IACrBC,GAAiB,GAChB,IAEH,MAAMA,EAAkBA,KACtBC,EAAAA,EACGC,IAAI,uEACJC,MAAMC,IACLlB,EAAiBkB,EAASC,KAAK,IAEhCC,OAAOC,IACNC,QAAQD,MAAM,uBAAwBA,EAAM,GAC5C,EAGAE,EAAexB,EAAcyB,QAAQC,IAAW,IAADC,EAAAC,EACnD,MACMC,IADiB,OAALH,QAAK,IAALA,GAAiB,QAAZC,EAALD,EAAOI,kBAAU,IAAAH,GAAY,QAAZC,EAAjBD,EAAmBI,kBAAU,IAAAH,OAAxB,EAALA,EAA+BI,gBAAiB,IACjCC,SAAS1C,EAAWyC,eAC/CE,EAA4B,aAAZ,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOS,QAClBC,GAAoB,OAALV,QAAK,IAALA,OAAK,EAALA,EAAOW,YAAavC,EACzC,OAAOoC,GAAYE,GAAgBP,CAAc,IAoB7CS,GAAcpC,EAAc,GAAKE,EACjCmC,EACJnC,IAAiBJ,EAAcO,OAASP,EAAcO,OAAS+B,EAAalC,EACxEoC,EAAgBhB,EAAaiB,MAAMH,EAAYC,GAO/CG,EAAaJ,EAAa,EAC1BK,EAAWC,KAAKC,IAAIP,EAAalC,EAAcoB,EAAajB,QAC5DuC,EAAsC,IAAxBtB,EAAajB,OAEjC,OACEwC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAF,UACHC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAAAH,UACHD,EAAAA,EAAAA,MAACK,EAAAA,GAAK,CAAAJ,SAAA,EACJC,EAAAA,EAAAA,KAACI,EAAAA,GAAW,CAAAL,SAAC,2BACbD,EAAAA,EAAAA,MAACO,EAAAA,GAAS,CAAAN,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAAA,GAAK,CAACC,UAAU,OAAMR,UACrBD,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAAAF,SAAA,EACHC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACM,GAAI,EAAGC,GAAI,EAAEV,UACjBD,EAAAA,EAAAA,MAACY,EAAAA,GAAW,CAAAX,SAAA,EACVC,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACTC,KAAK,OACLC,YAAY,YACZC,MAAOxE,EACPyE,SAAWC,GAAMzE,EAAcyE,EAAEC,OAAOH,UAE1Cd,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACC,QAAQ,UAAUZ,UAAU,OAAMR,UACzCC,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,KAAMC,EAAAA,YAInBtB,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACM,GAAI,EAAGC,GAAI,EAAEV,UACjBC,EAAAA,EAAAA,KAACuB,EAAAA,GAAU,CAAAxB,SAAC,sBAEdC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACM,GAAI,EAAGC,GAAI,EAAEV,UACjBC,EAAAA,EAAAA,KAACwB,EAAAA,GAAW,CACVjB,UAAU,cACVO,MAAO3D,EACP4D,SAAWC,IAAMS,OAtCHX,EAsC4BY,SAASV,EAAEC,OAAOH,OArC9E5D,EAAe,QACfE,EAAgB0D,GAFgBA,KAsCsD,EAAAf,SAEnE1C,EAAoBsE,KAAKC,IACxB5B,EAAAA,EAAAA,KAAA,UAAqBc,MAAOc,EAAO7B,SAChC6B,IAAW7E,EAAcO,OAAS,MAAQsE,GADhCA,eAQvB9B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAM,CAACC,SAAO,EAACC,UAAQ,EAACC,YAAU,EAAAjC,SAAA,EACjCC,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,CAAAlC,UACTD,EAAAA,EAAAA,MAACoC,EAAAA,GAAS,CAAAnC,SAAA,EACRC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,QAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,WAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,kBAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,yBAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,UAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,kBAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,iBAGtBC,EAAAA,EAAAA,KAACoC,EAAAA,GAAU,CAAArC,SACiB,IAAzBR,EAAcjC,QACb0C,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIqC,QAAQ,IAAI9B,UAAU,cAAaR,SAAC,sBAK1CR,EAAcoC,KAAI,CAAClD,EAAO6D,KACxBxC,EAAAA,EAAAA,MAACoC,EAAAA,GAAS,CAAAnC,SAAA,EACRC,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAEV,EAAaiD,EAAQ,KACtCtC,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAEtB,EAAMI,cACvBmB,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAEtB,EAAM+D,gBACvBxC,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAEtB,EAAMgE,uBACvBzC,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,UACbD,EAAAA,EAAAA,MAACoB,EAAAA,GAAO,CACNwB,MAAM,UACNvB,QAAQ,UACRZ,UAAU,OACVoC,MAAM,cACNC,QAASA,IAvGXC,WACtB,IACE,MAAM3E,QAAiBH,EAAAA,EAAMC,IAAI,2EAAD8E,OAC6CrE,EAAMsE,eAEnF,KAAI7E,EAASgB,QAAU,KAAOhB,EAASgB,OAAS,KAK9C,MAAM,IAAI8D,MAAM,6BALmC,CACnD,MAAM7E,EAAOD,EAASC,KACtBzB,EAAYyB,EAAK8E,aACjBrG,GAAW,EACb,CAGF,CAAE,MAAOyB,GACPC,QAAQD,MAAM,qBAAsBA,EAAM6E,QAC5C,GAyFuCC,CAAgB1E,GAAOsB,SAAA,EAEtCC,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAAWf,UAAU,eAAe,oBAIrDP,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAEtB,EAAM2E,gBACvBpD,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SACK,aAAjBtB,EAAMS,QACLY,EAAAA,EAAAA,MAAA,QAAMuD,MAAO,CAAEX,MAAO,SAAU3C,SAAA,CAAC,IAAEtB,EAAMS,OAAO,QAEhDc,EAAAA,EAAAA,KAAA,QAAAD,SAAOtB,EAAMS,aAtBHoD,WA8BxBtC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACM,UAAU,YAAWR,UACzBD,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACM,GAAI,EAAGC,GAAI,EAAEV,SAAA,CAAC,eACLxB,EAAajB,OAAO,UAAQmC,EAAW,OAAKC,QAG7DI,EAAAA,EAAAA,MAACwD,EAAAA,GAAW,CACVC,WAAYtG,EACZuG,MAAO7D,KAAK8D,KAAKlF,EAAajB,OAASH,GACvCuG,mBAAoBxG,EACpByG,MAAM,SACNC,aAAa,QAAO7D,SAAA,EAEpBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAe,CACdjB,QAASA,KAAO/C,GAAe3C,EAAeD,EAAc,GAC5D6G,SAA0B,IAAhB7G,GAAqB4C,EAC/BwD,MAAO,CAAEU,OAAQlE,EAAc,UAAY,WAAYE,SACxD,SAIAiE,MAAMC,KACL,CAAE3G,OAAQqC,KAAK8D,KAAKlF,EAAajB,OAASH,KAC1C,CAAC+G,EAAG5B,KACF,MAAM6B,EAAY7B,EAAQ,EACpB8B,EAAazE,KAAK8D,KAAKlF,EAAajB,OAASH,GAGnD,OACGgH,GAAalH,EAAc,GAAKkH,GAAalH,EAAc,GAC5DmH,GAAc,GACG,IAAhBnH,GAAqBkH,GAAa,GAClClH,IAAgBmH,GAAcD,GAAaC,EAAa,GAGvDpE,EAAAA,EAAAA,KAAC6D,EAAAA,GAAe,CAEdQ,OAAQF,IAAclH,EACtB2F,QAASA,IAAM1F,EAAeiH,GAC9Bd,MAAO,CAAEU,OAAQ,WAAYhE,SAE5BoE,GALIA,GAWO,IAAdA,GAAmBlH,EAAc,GASjCkH,IAAcC,GAAcnH,EAAcmH,EAAa,GAPvDpE,EAAAA,EAAAA,KAAC6D,EAAAA,GAAe,CAAiBC,UAAQ,EAACT,MAAO,CAAEU,OAAQ,WAAYhE,SAAC,OAAlDoE,GAenB,IAAI,KAIfnE,EAAAA,EAAAA,KAAC6D,EAAAA,GAAe,CACdjB,QAASA,KAAO/C,GAAe3C,EAAeD,EAAc,GAC5D6G,SACE7G,IAAgB0C,KAAK8D,KAAKlF,EAAajB,OAASH,IAAiB0C,EAEnEwD,MAAO,CAAEU,OAAQlE,EAAc,UAAY,WAAYE,SACxD,uBAQXD,EAAAA,EAAAA,MAACwE,EAAAA,GAAM,CACLC,SAAS,SACT5H,QAASA,EACT4D,UAAU,QACViE,QAASA,KACP5H,GAAW,EAAM,EACjBmD,SAAA,EAEFC,EAAAA,EAAAA,KAACyE,EAAAA,GAAY,CAAA1E,UACXC,EAAAA,EAAAA,KAAC0E,EAAAA,GAAW,CAAC7G,GAAG,4BAA2BkC,SAAC,iBAE9CC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAU,CAAA5E,UACTD,EAAAA,EAAAA,MAAC+B,EAAAA,GAAM,CAACC,SAAO,EAACC,UAAQ,EAACC,YAAU,EAAAjC,SAAA,EACjCC,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,CAAAlC,UACTD,EAAAA,EAAAA,MAACoC,EAAAA,GAAS,CAAAnC,SAAA,EACRC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,eAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,iBAClBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAApC,SAAC,2BAGtBC,EAAAA,EAAAA,KAACoC,EAAAA,GAAU,CAAArC,SACRtD,EAASkF,KAAI,CAACiD,EAAMtC,KACnBxC,EAAAA,EAAAA,MAACoC,EAAAA,GAAS,CAAAnC,SAAA,EACRC,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAE6E,EAAKC,aACtB7E,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAE6E,EAAKE,eACtB9E,EAAAA,EAAAA,KAACuC,EAAAA,GAAc,CAAAxC,SAAE6E,EAAKG,qBAHRzC,aASxBtC,EAAAA,EAAAA,KAACgF,EAAAA,GAAY,CAAAjF,UACXC,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACwB,MAAM,YAAYE,QAASA,IAAMhG,GAAW,GAAOmD,SAAC,iBAK7D,C,kCClTA,IAACuB,EAAY,CAAC,UAAW,4gB","sources":["views/kurir/Riwayat.js","../node_modules/@coreui/icons/src/free/cil-search.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CModalTitle,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CFormLabel,\n  CFormSelect,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilSearch } from '@coreui/icons'\n\nconst DataPengiriman = () => {\n  const [searchText, setSearchText] = useState('')\n  const [dataRoti, setDataRoti] = useState([])\n  const [visible, setVisible] = useState(false)\n  const [idKurir, setKurirId] = useState('')\n  const [dataPenjualan, setDataPenjualan] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage, setItemsPerPage] = useState(10)\n  const itemsPerPageOptions = [10, 25, 50, dataPenjualan.length] // Jumlah data per halaman\n\n  useEffect(() => {\n    const infoLogin = JSON.parse(localStorage.getItem('dataLogin'))\n    setKurirId(infoLogin.id)\n    handlePenjualan()\n  }, [])\n\n  const handlePenjualan = () => {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/kurir/datapenjualan')\n      .then((response) => {\n        setDataPenjualan(response.data)\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error)\n      })\n  }\n\n  const filteredData = dataPenjualan.filter((lapak) => {\n    const lapakName = lapak?.nama_lapak?.toString()?.toLowerCase() || ''\n    const lapakNameMatch = lapakName.includes(searchText.toLowerCase())\n    const isStatus = lapak?.status == 'finished'\n    const isKurirMatch = lapak?.id_kurir === idKurir\n    return isStatus && isKurirMatch && lapakNameMatch\n  })\n\n  const handleRotiClick = async (lapak) => {\n    try {\n      const response = await axios.get(\n        `https://be-myroti-production.up.railway.app/api/kurir/riwayat-transaksi/${lapak.id_transaksi}`,\n      )\n      if (response.status >= 200 && response.status < 300) {\n        const data = response.data\n        setDataRoti(data.detail_roti)\n        setVisible(true)\n      } else {\n        throw new Error('Gagal mengambil data roti')\n      }\n    } catch (error) {\n      console.error('Terjadi kesalahan:', error.message)\n    }\n  }\n\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex =\n    itemsPerPage === dataPenjualan.length ? dataPenjualan.length : startIndex + itemsPerPage\n  const paginatedData = filteredData.slice(startIndex, endIndex)\n\n  const handleItemsPerPageChange = (value) => {\n    setCurrentPage(1)\n    setItemsPerPage(value)\n  }\n\n  const startRange = startIndex + 1\n  const endRange = Math.min(startIndex + itemsPerPage, filteredData.length)\n  const isDataEmpty = filteredData.length === 0\n\n  return (\n    <div>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>Data Pengiriman Kurir</CCardHeader>\n            <CCardBody>\n              <CForm className=\"mb-3\">\n                <CRow>\n                  <CCol md={8} xs={6}>\n                    <CInputGroup>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        value={searchText}\n                        onChange={(e) => setSearchText(e.target.value)}\n                      />\n                      <CButton variant=\"outline\" className=\"ms-2\">\n                        <CIcon icon={cilSearch} />\n                      </CButton>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol md={2} xs={3}>\n                    <CFormLabel>Rows Per Page:</CFormLabel>\n                  </CCol>\n                  <CCol md={2} xs={3}>\n                    <CFormSelect\n                      className=\"form-select\"\n                      value={itemsPerPage}\n                      onChange={(e) => handleItemsPerPageChange(parseInt(e.target.value))}\n                    >\n                      {itemsPerPageOptions.map((option) => (\n                        <option key={option} value={option}>\n                          {option === dataPenjualan.length ? 'All' : option}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </CCol>\n                </CRow>\n              </CForm>\n              <CTable striped bordered responsive>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell>No</CTableHeaderCell>\n                    <CTableHeaderCell>Lapak</CTableHeaderCell>\n                    <CTableHeaderCell>Alamat Lapak</CTableHeaderCell>\n                    <CTableHeaderCell>Tanggal Pengambilan</CTableHeaderCell>\n                    <CTableHeaderCell>Roti</CTableHeaderCell>\n                    <CTableHeaderCell>Uang Setoran</CTableHeaderCell>\n                    <CTableHeaderCell>Status</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {paginatedData.length === 0 ? (\n                    <tr>\n                      <td colSpan=\"7\" className=\"text-center\">\n                        Tidak ada data.\n                      </td>\n                    </tr>\n                  ) : (\n                    paginatedData.map((lapak, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell>{startIndex + index + 1}</CTableDataCell>\n                        <CTableDataCell>{lapak.nama_lapak}</CTableDataCell>\n                        <CTableDataCell>{lapak.alamat_lapak}</CTableDataCell>\n                        <CTableDataCell>{lapak.tanggal_pengambilan}</CTableDataCell>\n                        <CTableDataCell>\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            className=\"ms-2\"\n                            title=\"Daftar Roti\"\n                            onClick={() => handleRotiClick(lapak)}\n                          >\n                            <CIcon icon={cilSearch} className=\"mx-12 me-2\" />\n                            Open Detail\n                          </CButton>\n                        </CTableDataCell>\n                        <CTableDataCell>{lapak.uang_setoran}</CTableDataCell>\n                        <CTableDataCell>\n                          {lapak.status === 'finished' ? (\n                            <span style={{ color: 'green' }}> {lapak.status} </span>\n                          ) : (\n                            <span>{lapak.status}</span>\n                          )}\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              <CRow className=\"mt-2 mb-2\">\n                <CCol md={4} xs={8}>\n                  Total Rows: {filteredData.length} Page: {startRange} of {endRange}\n                </CCol>\n              </CRow>\n              <CPagination\n                activepage={currentPage}\n                pages={Math.ceil(filteredData.length / itemsPerPage)}\n                onActivePageChange={setCurrentPage}\n                align=\"center\"\n                doublearrows=\"false\"\n              >\n                <CPaginationItem\n                  onClick={() => !isDataEmpty && setCurrentPage(currentPage - 1)}\n                  disabled={currentPage === 1 || isDataEmpty}\n                  style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n                >\n                  Prev\n                </CPaginationItem>\n\n                {Array.from(\n                  { length: Math.ceil(filteredData.length / itemsPerPage) },\n                  (_, index) => {\n                    const pageIndex = index + 1\n                    const totalPages = Math.ceil(filteredData.length / itemsPerPage)\n\n                    // Display three consecutive pages centered around the current page\n                    if (\n                      (pageIndex >= currentPage - 1 && pageIndex <= currentPage + 1) ||\n                      totalPages <= 3 ||\n                      (currentPage === 1 && pageIndex <= 3) ||\n                      (currentPage === totalPages && pageIndex >= totalPages - 2)\n                    ) {\n                      return (\n                        <CPaginationItem\n                          key={pageIndex}\n                          active={pageIndex === currentPage}\n                          onClick={() => setCurrentPage(pageIndex)}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          {pageIndex}\n                        </CPaginationItem>\n                      )\n                    }\n\n                    // Display ellipses for pages before the current page\n                    if (pageIndex === 1 && currentPage > 2) {\n                      return (\n                        <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                          ...\n                        </CPaginationItem>\n                      )\n                    }\n\n                    // Display ellipses for pages after the current page\n                    if (pageIndex === totalPages && currentPage < totalPages - 1) {\n                      return (\n                        <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                          ...\n                        </CPaginationItem>\n                      )\n                    }\n\n                    return null\n                  },\n                )}\n\n                <CPaginationItem\n                  onClick={() => !isDataEmpty && setCurrentPage(currentPage + 1)}\n                  disabled={\n                    currentPage === Math.ceil(filteredData.length / itemsPerPage) || isDataEmpty\n                  }\n                  style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n                >\n                  Next\n                </CPaginationItem>\n              </CPagination>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CModal\n        backdrop=\"static\"\n        visible={visible}\n        className=\"modal\"\n        onClose={() => {\n          setVisible(false)\n        }}\n      >\n        <CModalHeader>\n          <CModalTitle id=\"VerticallyCenteredExample\">Data Roti</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CTable striped bordered responsive>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell>Nama Roti</CTableHeaderCell>\n                <CTableHeaderCell>Jumlah Roti</CTableHeaderCell>\n                <CTableHeaderCell>Jumlah Roti Basi</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {dataRoti.map((roti, index) => (\n                <CTableRow key={index}>\n                  <CTableDataCell>{roti.nama_roti}</CTableDataCell>\n                  <CTableDataCell>{roti.jumlah_roti}</CTableDataCell>\n                  <CTableDataCell>{roti.jumlah_roti_basi}</CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default DataPengiriman\n","export var cilSearch = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M479.6,399.716l-81.084-81.084-62.368-25.767A175.014,175.014,0,0,0,368,192c0-97.047-78.953-176-176-176S16,94.953,16,192,94.953,368,192,368a175.034,175.034,0,0,0,101.619-32.377l25.7,62.2L400.4,478.911a56,56,0,1,0,79.2-79.195ZM48,192c0-79.4,64.6-144,144-144s144,64.6,144,144S271.4,336,192,336,48,271.4,48,192ZM456.971,456.284a24.028,24.028,0,0,1-33.942,0l-76.572-76.572-23.894-57.835L380.4,345.771l76.573,76.572A24.028,24.028,0,0,1,456.971,456.284Z' class='ci-primary'/>\"];\n"],"names":["DataPengiriman","searchText","setSearchText","useState","dataRoti","setDataRoti","visible","setVisible","idKurir","setKurirId","dataPenjualan","setDataPenjualan","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","itemsPerPageOptions","length","useEffect","infoLogin","JSON","parse","localStorage","getItem","id","handlePenjualan","axios","get","then","response","data","catch","error","console","filteredData","filter","lapak","_lapak$nama_lapak","_lapak$nama_lapak$toS","lapakNameMatch","nama_lapak","toString","toLowerCase","includes","isStatus","status","isKurirMatch","id_kurir","startIndex","endIndex","paginatedData","slice","startRange","endRange","Math","min","isDataEmpty","_jsxs","children","_jsx","CRow","CCol","CCard","CCardHeader","CCardBody","CForm","className","md","xs","CInputGroup","CFormInput","type","placeholder","value","onChange","e","target","CButton","variant","CIcon","icon","cilSearch","CFormLabel","CFormSelect","handleItemsPerPageChange","parseInt","map","option","CTable","striped","bordered","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","colSpan","index","CTableDataCell","alamat_lapak","tanggal_pengambilan","color","title","onClick","async","concat","id_transaksi","Error","detail_roti","message","handleRotiClick","uang_setoran","style","CPagination","activepage","pages","ceil","onActivePageChange","align","doublearrows","CPaginationItem","disabled","cursor","Array","from","_","pageIndex","totalPages","active","CModal","backdrop","onClose","CModalHeader","CModalTitle","CModalBody","roti","nama_roti","jumlah_roti","jumlah_roti_basi","CModalFooter"],"sourceRoot":""}