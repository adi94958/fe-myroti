{"version":3,"file":"static/js/714.01be97e5.chunk.js","mappings":"sSAgCA,MAueA,EAveuBA,KACrB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GACjCK,GAAWC,EAAAA,EAAAA,OACVC,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAS,KAChDS,EAAWC,IAAgBV,EAAAA,EAAAA,WAAS,IAEpCW,EAAUC,IAAeZ,EAAAA,EAAAA,UAAS,CACvCa,SAAS,IAAIC,MAAOC,qBACpBC,WAAY,GACZC,WAAY,GACZC,WAAY,MAGPC,EAAWC,IAAgBpB,EAAAA,EAAAA,UAAS,KAE3CqB,EAAAA,EAAAA,YAAU,KACUC,WAChB,IAEE,MAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACtDf,EAAY,IACPD,EACHK,WAAYO,EAAcP,WAC1BC,WAAYM,EAAcN,WAC1BC,WAAYK,EAAcL,aAG5B,MAAMU,QAA4BC,EAAAA,EAAMC,IACtC,+DAEFC,QAAQC,IAAI,cAAeJ,EAAoBK,MAE/C,MAIMC,EAJeN,EAAoBK,KAAKE,QAAQC,GAC7CA,EAAUpB,aAAeO,EAAcP,aAGRqB,KAAKD,IAAS,CACpDpB,WAAYoB,EAAUpB,WACtBsB,UAAWF,EAAUE,UACrBC,sBAAuBH,EAAUG,sBACjCC,qBAAsBJ,EAAUI,qBAChCC,iBAAkBL,EAAUK,qBAE9BV,QAAQC,IAAI,cAAeE,GAC3B1B,EAAmB0B,GAGnB,MAGMQ,SAHqBb,EAAAA,EAAMC,IAC/B,yEAE4BG,KAAKI,KAAKM,IAAI,CAC1CL,UAAWK,EAAKL,UAChBM,UAAWD,EAAKC,UAChBC,UAAWF,EAAKE,UAChBC,UAAWH,EAAKG,UAChBC,kBAAmBJ,EAAKI,kBACxBC,oBAAqB,MAGvB,GAAId,EAAmBe,OAAS,EAAG,CACjC,MAAMC,EAAYR,EAASL,KAAKc,IAC9B,MAAMC,EAAclB,EAAmBmB,MACpCV,GAASA,EAAKL,YAAca,EAAab,YAG5C,OAAIc,EACK,IACFD,EACHH,oBAAqBI,EAAYX,kBAG9BU,CAAY,IAGrBpD,EAAYmD,EACd,KAAO,EAgLb,SAAsBI,GACpB,IAAK,IAAIC,EAAID,EAAML,OAAS,EAAGM,EAAI,EAAGA,IAAK,CACzC,MAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,KACxCD,EAAMC,GAAID,EAAME,IAAM,CAACF,EAAME,GAAIF,EAAMC,GAC3C,CACA,OAAOD,CACT,EApL8BM,CACpBC,MAAMC,KAAK,CAAEb,OAAQP,EAASO,SAAU,CAACc,EAAGC,IAAUA,KACtDC,MAAM,EAAG,IAEGC,SAASF,IACrBtB,EAASsB,GAAOhB,oBAAsB,CAAC,IAEzCjD,EAAY2C,EACd,CACF,CAAE,MAAOyB,GACPpC,QAAQoC,MAAM,uBAAwBA,EACxC,GAGFC,EAAW,GACV,IAuKH,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAAAF,UACJF,EAAAA,EAAAA,MAACK,EAAAA,GAAK,CAACC,SAlFiBrD,UAC5BsD,EAAEC,iBAEF,MAAMC,EAAmB3D,EAAUgB,QAAQ4C,GAASA,EAAKC,YAAc,IAEvE,GAAgC,IAA5BF,EAAiB7B,OAAc,CAgBjC,YAfcgC,IAAAA,MAAW,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAUL,IACRA,EAAMM,aAAeP,IAAAA,UACrBC,EAAMO,aAAeR,IAAAA,WAAgB,IAGnCS,KAAK,CACTC,KAAM,UACNC,MAAO,kDAGX,CAEAxF,GAAW,GAEX,MAGMgC,EAAY,CAChBE,UAJoBwC,EAAiBzC,KAAK0C,GAASA,EAAKzC,UAAUuD,aAKlEb,YAJsBF,EAAiBzC,KAAK0C,GAASA,EAAKC,eAO5DnD,EAAAA,EAAMiE,KAAK,gFAADC,OACwEpF,EAASK,YACzFoB,GAEF6C,IAAAA,KAAU,CACRW,MAAO,WACPI,KAAK,gCACLL,KAAM,UACNM,kBAAmB,OAElBC,MAAMC,IACDA,EAAOC,cACTC,OAAOC,SAASC,KAAO,qBACzB,IAEDL,MAAMM,IACLzE,QAAQC,IAAI,yBAA0BwE,EAASvE,MAC/CP,aAAa+E,WAAW,iBACxBpG,EAAS,qBAAqB,IAE/BqG,OAAOvC,IACNpC,QAAQoC,MAAM,0BAA2BA,EAAM,GAC/C,EA0BuCI,SAAA,EACrCC,EAAAA,EAAAA,KAACmC,EAAAA,GAAW,CAAApC,SAAC,qBACbF,EAAAA,EAAAA,MAACuC,EAAAA,GAAS,CAAArC,SAAA,EACRF,EAAAA,EAAAA,MAACI,EAAAA,GAAK,CAAAF,SAAA,EACJC,EAAAA,EAAAA,KAACmC,EAAAA,GAAW,CAAApC,SAAC,gBACbC,EAAAA,EAAAA,KAACoC,EAAAA,GAAS,CAAArC,UACRF,EAAAA,EAAAA,MAACwC,EAAAA,GAAI,CAAAtC,SAAA,EACHC,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACC,GAAI,GAAGxC,UACXC,EAAAA,EAAAA,KAACwC,EAAAA,GAAW,CAACC,UAAU,OAAM1C,UAC3BC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,CACTC,KAAK,UACLC,cAAc,UACdC,MAAO1G,EAASE,QAChByG,UAAQ,SAId9C,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACC,GAAI,GAAGxC,UACXC,EAAAA,EAAAA,KAACwC,EAAAA,GAAW,CAACC,UAAU,OAAM1C,UAC3BC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,CACTC,KAAK,aACLI,YAAY,aACZH,cAAc,aACdC,MAAO1G,EAASM,WAChBqG,UAAQ,SAId9C,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACC,GAAI,GAAGxC,UACXC,EAAAA,EAAAA,KAACwC,EAAAA,GAAW,CAACC,UAAU,OAAM1C,UAC3BC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,CACTC,KAAK,aACLI,YAAY,aACZH,cAAc,aACdC,MAAO1G,EAASO,WAChBoG,UAAQ,SAId9C,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACC,GAAI,GAAGxC,UACXC,EAAAA,EAAAA,KAACwC,EAAAA,GAAW,CAACC,UAAU,OAAM1C,UAC3BC,EAAAA,EAAAA,KAACgD,EAAAA,GAAa,CACZL,KAAK,kBACLI,YAAY,kBACZH,cAAc,kBACdC,MAAO1G,EAASO,WAChBoG,UAAQ,iBAOpBjD,EAAAA,EAAAA,MAACI,EAAAA,GAAK,CAACwC,UAAU,OAAM1C,SAAA,EACrBC,EAAAA,EAAAA,KAACmC,EAAAA,GAAW,CAAApC,SAAC,eACbF,EAAAA,EAAAA,MAACuC,EAAAA,GAAS,CAAArC,SAAA,EACRC,EAAAA,EAAAA,KAACqC,EAAAA,GAAI,CAAAtC,UACHC,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACW,GAAI,EAAGV,GAAI,EAAGE,UAAU,OAAM1C,UAClCF,EAAAA,EAAAA,MAACqD,EAAAA,GAAO,CAACC,QAAQ,UAAUC,QAlOrBtG,UACtBZ,GAAa,EAAK,EAiOkD6D,SAAA,EAClDC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAAClC,KAAMmC,EAAAA,EAAWb,UAAU,cAAc,qBAKtD5C,EAAAA,EAAAA,MAAC0D,EAAAA,GAAM,CAACC,SAAO,EAACC,UAAQ,EAACC,YAAU,EAAA3D,SAAA,EACjCC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAU,CAAA5D,UACTF,EAAAA,EAAAA,MAAC+D,EAAAA,GAAS,CAAA7D,SAAA,EACRC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,SAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,eAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,eAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,iBAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,kBAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,eAGtBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAA/D,SACa,IAArBpD,EAAU8B,QACTuB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI+D,QAAQ,IAAItB,UAAU,cAAa1C,SAAC,sBAK1CpD,EAAUkB,KAAI,CAAC0C,EAAMf,KACnBK,EAAAA,EAAAA,MAAC+D,EAAAA,GAAS,CAAA7D,SAAA,EACRC,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAEP,EAAQ,KACzBQ,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAEQ,EAAKnC,aACtB4B,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAEQ,EAAKjC,aACtB0B,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAEQ,EAAK/B,uBACtBwB,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAEQ,EAAKhC,qBACtByB,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,UACbC,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAAAvC,UACHC,EAAAA,EAAAA,KAACkD,EAAAA,GAAO,CACNe,MAAM,SACNd,QAAQ,UACRV,UAAU,OACVrB,MAAM,kBACNgC,QAASA,IApMdc,EAACzG,EAAM+B,KAC9BiB,IAAAA,KAAU,CACRW,MAAM,qCAADG,OAAuC9D,EAAKW,UAAS,KAC1D+C,KAAM,UACNgD,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnB5C,kBAAmB,WAClBC,MAAMC,IACP,GAAIA,EAAOC,YAAa,CACtB,MAAM0C,EAAkB,IAAI3H,GAC5B2H,EAAgBC,OAAO/E,EAAO,GAC9B5C,EAAa0H,GACb7D,IAAAA,KAAU,WAAY,8BAA+B,UACvD,IACA,EAqLyCyD,CAAiB3D,EAAMf,GAAOO,UAE7CC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK,CAAClC,KAAMqD,EAAAA,YAfLhF,oBA2B9BK,EAAAA,EAAAA,MAAC4E,EAAAA,GAAW,CAAA1E,SAAA,EACVF,EAAAA,EAAAA,MAACwC,EAAAA,GAAI,CAAAtC,SAAA,EACHC,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACW,GAAI,EAAElD,UACVC,EAAAA,EAAAA,KAACkD,EAAAA,GAAO,CACNe,MAAM,SACNd,QAAQ,UACRV,UAAU,OACVrB,MAAM,OACNgC,QA9IhB,WACElG,aAAa+E,WAAW,iBACxBpG,EAAS,qBACX,EA2IsCkE,SACvB,YAIHC,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACC,GAAI,EAAExC,SACTpE,GACCqE,EAAAA,EAAAA,KAACkD,EAAAA,GAAO,CAACe,MAAM,UAAUd,QAAQ,UAAUuB,KAAK,SAAS5B,UAAQ,EAAA/C,UAC/DC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAQ,CAACV,MAAM,OAAOW,KAAK,UAG9B5E,EAAAA,EAAAA,KAACkD,EAAAA,GAAO,CAACe,MAAM,UAAUd,QAAQ,UAAUuB,KAAK,SAAQ3E,SAAC,iBAM/DC,EAAAA,EAAAA,KAACqC,EAAAA,GAAI,CAACI,UAAU,OAAM1C,SACnBtE,IAAWuE,EAAAA,EAAAA,KAAA,KAAGyC,UAAU,mCAAkC1C,SAAEtE,eAKrEoE,EAAAA,EAAAA,MAACgF,EAAAA,GAAM,CACLC,SAAS,SACTC,QAAS9I,EACTwG,UAAU,WACVuC,QAASA,KACP9I,GAAa,GACbR,EAAW,IACXE,GAAW,EAAM,EACjBmE,SAAA,EAEFC,EAAAA,EAAAA,KAACiF,EAAAA,GAAY,CAACC,aAAW,EAAAnF,UACvBC,EAAAA,EAAAA,KAACmF,EAAAA,GAAW,CAAApF,SAAC,kBAEfC,EAAAA,EAAAA,KAACoF,EAAAA,GAAU,CAAArF,UACTF,EAAAA,EAAAA,MAAC0D,EAAAA,GAAM,CAACC,SAAO,EAACC,UAAQ,EAACC,YAAU,EAAA3D,SAAA,EACjCC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAU,CAAA5D,UACTF,EAAAA,EAAAA,MAAC+D,EAAAA,GAAS,CAAA7D,SAAA,EACRC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,QAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,eAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,eAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,eAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,kBAClBC,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAAA9D,SAAC,sBAGtBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAA/D,SACY,IAApBzE,EAASmD,QACRuB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI+D,QAAQ,IAAItB,UAAU,cAAa1C,SAAC,sBAK1CzE,EAASuC,KAAI,CAACM,EAAMqB,KAClBK,EAAAA,EAAAA,MAAC+D,EAAAA,GAAS,CAAA7D,SAAA,EACRC,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAEP,EAAQ,KACzBQ,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAE5B,EAAKC,aACtB4B,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAE5B,EAAKE,aACtB2B,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAE5B,EAAKG,aACtB0B,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,SAAE5B,EAAKI,qBACtByB,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAAAjE,UACbC,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CAAAH,UACJC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAU,CACTkC,KAAK,KACLjC,KAAK,cACLE,MAAO1E,EAAKK,oBACZ6G,SAAWjF,GAhWVkF,EAAC/E,EAAMgF,KAC9B,MAAMC,EAAaD,EAAME,OAAO5C,MAC1B6C,EAA4B,KAAfF,EAAoBG,SAASH,EAAY,IAAM,EAElEjK,GAAaqK,IACX,MAAMC,EAAUD,EAAS/H,KAAKiI,GACxBA,EAAahI,YAAcyC,EAAKzC,UAC3B,IACFgI,EACHtH,oBAAqBkH,GAGlBI,IAGT,OADAvI,QAAQC,IAAI,UAAWqI,GAChBA,CAAO,GACd,EAgVqCP,CAAiBnH,EAAMiC,GACxC2F,UAAQ,UAbAvG,aAuB1BK,EAAAA,EAAAA,MAACmG,EAAAA,GAAY,CAAAjG,SAAA,EACXC,EAAAA,EAAAA,KAACkD,EAAAA,GAAO,CACNe,MAAM,YACNb,QAASA,KACPlH,GAAa,GACbN,GAAW,EAAM,EACjBmE,SACH,UAGApE,GACCqE,EAAAA,EAAAA,KAACkD,EAAAA,GAAO,CAACe,MAAM,UAAUnB,UAAQ,EAAA/C,UAC/BC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAQ,CAACV,MAAM,OAAOW,KAAK,UAG9B5E,EAAAA,EAAAA,KAACkD,EAAAA,GAAO,CAACe,MAAM,UAAUb,QAvWhB6C,KACjB,MAAMC,EAAU5K,EAAS6K,OAAO5F,GACvBA,EAAK/B,qBAAuB+B,EAAKlC,YAI1C,GAFAd,QAAQC,IAAI0I,GAERA,EAAS,CACX,MAAME,EAAe9K,EAASqC,QAAQ4C,GAASA,EAAK/B,oBAAsB,IAC1EjB,QAAQC,IAAI,iBAAkB4I,GAC9BxJ,EAAawJ,GACblK,GAAa,GACbL,EAAS,4BACK4E,IAAAA,MAAW,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAUL,IACRA,EAAMM,aAAeP,IAAAA,UACrBC,EAAMO,aAAeR,IAAAA,WAAgB,IAGnCS,KAAK,CACTC,KAAM,UACNC,MAAO,uBAEX,KAAO,CACSX,IAAAA,MAAW,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAUL,IACRA,EAAMM,aAAeP,IAAAA,UACrBC,EAAMO,aAAeR,IAAAA,WAAgB,IAGnCS,KAAK,CACTC,KAAM,UACNC,MAAO,iEAEX,GA4TqDrB,SAAC,oBAMnD,C,kCCpgBG,IAACyE,EAAW,CAAC,UAAW,mrB","sources":["views/koordinator/pengiriman/FormPengiriman.js","../node_modules/@coreui/icons/src/free/cil-trash.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CRow,\n  CTable,\n  CSpinner,\n  CTableRow,\n  CTableHead,\n  CTableBody,\n  CTableDataCell,\n  CTableHeaderCell,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CModalTitle,\n  CFormTextarea,\n} from '@coreui/react'\nimport { cilTrash, cilBurger } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nconst FormPengiriman = () => {\n  const [dataRoti, setDataRoti] = useState([])\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n  const navigate = useNavigate()\n  const [dataRekomendasi, setDataRekomendasi] = useState([])\n  const [modalRoti, setModalRoti] = useState(false)\n\n  const [formData, setFormData] = useState({\n    tanggal: new Date().toLocaleDateString(), // Mendapatkan tanggal sekarang dalam format lokal\n    kode_lapak: '',\n    nama_lapak: '',\n    nama_kurir: '',\n  })\n  //const [inputDataRotiArray, setInputDataRotiArray] = useState([])\n  const [dataArray, setDataArray] = useState([])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // First useEffect logic\n        const dataTransaksi = JSON.parse(localStorage.getItem('dataTransaksi'))\n        setFormData({\n          ...formData,\n          kode_lapak: dataTransaksi.kode_lapak,\n          nama_lapak: dataTransaksi.nama_lapak,\n          nama_kurir: dataTransaksi.nama_kurir,\n        })\n\n        const responseRekomendasi = await axios.get(\n          'https://be-myroti-production.up.railway.app/api/rekomendasi',\n        )\n        console.log('Rekomendasi', responseRekomendasi.data)\n\n        const filteredData = responseRekomendasi.data.filter((transaksi) => {\n          return transaksi.kode_lapak === dataTransaksi.kode_lapak\n        })\n\n        const mappedFilteredData = filteredData.map((transaksi) => ({\n          kode_lapak: transaksi.kode_lapak,\n          kode_roti: transaksi.kode_roti,\n          jumlah_roti_transaksi: transaksi.jumlah_roti_transaksi,\n          jumlah_roti_rotibasi: transaksi.jumlah_roti_rotibasi,\n          calculated_value: transaksi.calculated_value,\n        }))\n        console.log('data filter', mappedFilteredData)\n        setDataRekomendasi(mappedFilteredData)\n\n        // Second useEffect logic\n        const responseRoti = await axios.get(\n          'https://be-myroti-production.up.railway.app/api/koordinator/dataroti',\n        )\n        const initRoti = responseRoti.data.map((roti) => ({\n          kode_roti: roti.kode_roti,\n          nama_roti: roti.nama_roti,\n          stok_roti: roti.stok_roti,\n          rasa_roti: roti.rasa_roti,\n          harga_satuan_roti: roti.harga_satuan_roti,\n          jumlah_roti_dikirim: 0,\n        }))\n\n        if (mappedFilteredData.length > 0) {\n          const dataRecom = initRoti.map((existingRoti) => {\n            const matchedRoti = mappedFilteredData.find(\n              (roti) => roti.kode_roti === existingRoti.kode_roti,\n            )\n\n            if (matchedRoti) {\n              return {\n                ...existingRoti,\n                jumlah_roti_dikirim: matchedRoti.calculated_value,\n              }\n            }\n            return existingRoti\n          })\n\n          setDataRoti(dataRecom)\n        } else {\n          // Handle the case where mappedFilteredData is empty\n          const randomIndices = shuffleArray(\n            Array.from({ length: initRoti.length }, (_, index) => index),\n          ).slice(0, 10)\n\n          randomIndices.forEach((index) => {\n            initRoti[index].jumlah_roti_dikirim = 5\n          })\n          setDataRoti(initRoti)\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error)\n      }\n    }\n\n    fetchData()\n  }, []) // Empty dependency array ensures the effect runs only once on mount\n\n  const handleRotiModal = async () => {\n    setModalRoti(true)\n  }\n\n  const handleJumlahRoti = (item, event) => {\n    const inputValue = event.target.value\n    const jumlahRoti = inputValue !== '' ? parseInt(inputValue, 10) : 0\n\n    setDataRoti((prevData) => {\n      const newData = prevData.map((existingItem) => {\n        if (existingItem.kode_roti === item.kode_roti) {\n          return {\n            ...existingItem,\n            jumlah_roti_dikirim: jumlahRoti,\n          }\n        }\n        return existingItem\n      })\n      console.log('newData', newData)\n      return newData\n    })\n  }\n\n  const tambahRoti = () => {\n    const isValid = dataRoti.every((item) => {\n      return item.jumlah_roti_dikirim <= item.stok_roti\n    })\n    console.log(isValid)\n\n    if (isValid) {\n      const newDataArray = dataRoti.filter((item) => item.jumlah_roti_dikirim > 0)\n      console.log('newDataArray :', newDataArray)\n      setDataArray(newDataArray)\n      setModalRoti(false)\n      navigate('/pengiriman/kelola/kirim')\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.onmouseenter = Swal.stopTimer\n          toast.onmouseleave = Swal.resumeTimer\n        },\n      })\n      Toast.fire({\n        icon: 'success',\n        title: 'Berhasil Pilih Roti',\n      })\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 5000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.onmouseenter = Swal.stopTimer\n          toast.onmouseleave = Swal.resumeTimer\n        },\n      })\n      Toast.fire({\n        icon: 'warning',\n        title: 'Mohon maaf! Ada jumlah roti yang melebihi stok yang tersedia.',\n      })\n    }\n  }\n\n  const handleDeleteRoti = (data, index) => {\n    Swal.fire({\n      title: `Apakah anda yakin ingin menghapus ${data.nama_roti}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Delete',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const updatedDataRoti = [...dataArray]\n        updatedDataRoti.splice(index, 1)\n        setDataArray(updatedDataRoti)\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success')\n      }\n    })\n  }\n  const handleSubmitTransaksi = async (e) => {\n    e.preventDefault()\n\n    const nonZeroDataArray = dataArray.filter((item) => item.jumlah_roti > 0)\n\n    if (nonZeroDataArray.length === 0) {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.onmouseenter = Swal.stopTimer\n          toast.onmouseleave = Swal.resumeTimer\n        },\n      })\n      Toast.fire({\n        icon: 'warning',\n        title: 'Silakan untuk memilih roti yang akan di kirim!',\n      })\n      return\n    }\n\n    setLoading(true)\n\n    const kodeRotiArray = nonZeroDataArray.map((item) => item.kode_roti.toString())\n    const jumlahRotiArray = nonZeroDataArray.map((item) => item.jumlah_roti)\n\n    const transaksi = {\n      kode_roti: kodeRotiArray,\n      jumlah_roti: jumlahRotiArray,\n    }\n\n    axios.post(\n      `https://be-myroti-production.up.railway.app/api/koordinator/transaksi/create/${formData.kode_lapak}`,\n      transaksi,\n    )\n    Swal.fire({\n      title: 'Berhasil',\n      text: `Berhasil melakukan pengiriman`,\n      icon: 'success',\n      confirmButtonText: 'OK',\n    })\n      .then((result) => {\n        if (result.isConfirmed) {\n          window.location.href = '/pengiriman/kelola'\n        }\n      })\n      .then((response) => {\n        console.log('Cart sent successfully', response.data)\n        localStorage.removeItem('dataTransaksi')\n        navigate('/pengiriman/kelola')\n      })\n      .catch((error) => {\n        console.error('Error sending cart data', error)\n      })\n  }\n\n  function handleCancel() {\n    localStorage.removeItem('dataTransaksi')\n    navigate('/pengiriman/kelola')\n  }\n\n  const getRotiQuantity = (dataRoti, kode_roti) => {\n    const matchingRoti = dataRoti.find((item) => item.kode_roti === kode_roti)\n    return matchingRoti ? matchingRoti.jumlah_roti : 5\n  }\n\n  // Random fill\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1))\n      ;[array[i], array[j]] = [array[j], array[i]]\n    }\n    return array\n  }\n\n  return (\n    <>\n      <CCard>\n        <CForm onSubmit={handleSubmitTransaksi}>\n          <CCardHeader>Form Pengiriman</CCardHeader>\n          <CCardBody>\n            <CCard>\n              <CCardHeader>Data Lapak</CCardHeader>\n              <CCardBody>\n                <CRow>\n                  <CCol xs={12}>\n                    <CInputGroup className=\"mb-3\">\n                      <CFormInput\n                        name=\"tanggal\"\n                        floatingLabel=\"Tanggal\"\n                        value={formData.tanggal}\n                        disabled\n                      />\n                    </CInputGroup>\n                  </CCol>\n                  <CCol xs={12}>\n                    <CInputGroup className=\"mb-3\">\n                      <CFormInput\n                        name=\"nama_lapak\"\n                        placeholder=\"Nama Lapak\"\n                        floatingLabel=\"Nama Lapak\"\n                        value={formData.nama_lapak}\n                        disabled\n                      />\n                    </CInputGroup>\n                  </CCol>\n                  <CCol xs={12}>\n                    <CInputGroup className=\"mb-3\">\n                      <CFormInput\n                        name=\"nama_kurir\"\n                        placeholder=\"Nama Kurir\"\n                        floatingLabel=\"Nama Kurir\"\n                        value={formData.nama_kurir}\n                        disabled\n                      />\n                    </CInputGroup>\n                  </CCol>\n                  <CCol xs={12}>\n                    <CInputGroup className=\"mb-3\">\n                      <CFormTextarea\n                        name=\"catatan_penjual\"\n                        placeholder=\"Catatan Penjual\"\n                        floatingLabel=\"Catatan Penjual\"\n                        value={formData.nama_kurir}\n                        disabled\n                      />\n                    </CInputGroup>\n                  </CCol>\n                </CRow>\n              </CCardBody>\n            </CCard>\n            <CCard className=\"mt-4\">\n              <CCardHeader>Data Roti</CCardHeader>\n              <CCardBody>\n                <CRow>\n                  <CCol md={8} xs={6} className=\"mb-3\">\n                    <CButton variant=\"outline\" onClick={handleRotiModal}>\n                      <CIcon icon={cilBurger} className=\"mx-8 me-2\" />\n                      Pilih Roti\n                    </CButton>\n                  </CCol>\n                </CRow>\n                <CTable striped bordered responsive>\n                  <CTableHead>\n                    <CTableRow>\n                      <CTableHeaderCell>No.</CTableHeaderCell>\n                      <CTableHeaderCell>Nama Roti</CTableHeaderCell>\n                      <CTableHeaderCell>Rasa Roti</CTableHeaderCell>\n                      <CTableHeaderCell>Jumlah Roti</CTableHeaderCell>\n                      <CTableHeaderCell>Harga Satuan</CTableHeaderCell>\n                      <CTableHeaderCell>Aksi</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {dataArray.length === 0 ? (\n                      <tr>\n                        <td colSpan=\"7\" className=\"text-center\">\n                          Tidak ada data.\n                        </td>\n                      </tr>\n                    ) : (\n                      dataArray.map((item, index) => (\n                        <CTableRow key={index}>\n                          <CTableDataCell>{index + 1}</CTableDataCell>\n                          <CTableDataCell>{item.nama_roti}</CTableDataCell>\n                          <CTableDataCell>{item.rasa_roti}</CTableDataCell>\n                          <CTableDataCell>{item.jumlah_roti_dikirim}</CTableDataCell>\n                          <CTableDataCell>{item.harga_satuan_roti}</CTableDataCell>\n                          <CTableDataCell>\n                            <CCol>\n                              <CButton\n                                color=\"danger\"\n                                variant=\"outline\"\n                                className=\"ms-2\"\n                                title=\"Hapus Data Roti\"\n                                onClick={() => handleDeleteRoti(item, index)}\n                              >\n                                <CIcon icon={cilTrash} />\n                              </CButton>\n                            </CCol>\n                          </CTableDataCell>\n                        </CTableRow>\n                      ))\n                    )}\n                  </CTableBody>\n                </CTable>\n              </CCardBody>\n            </CCard>\n          </CCardBody>\n          <CCardFooter>\n            <CRow>\n              <CCol md={1}>\n                <CButton\n                  color=\"danger\"\n                  variant=\"outline\"\n                  className=\"ms-2\"\n                  title=\"Back\"\n                  onClick={handleCancel}\n                >\n                  Back\n                </CButton>\n              </CCol>\n              <CCol xs={1}>\n                {loading ? (\n                  <CButton color=\"primary\" variant=\"outline\" type=\"submit\" disabled>\n                    <CSpinner color=\"info\" size=\"sm\" />\n                  </CButton>\n                ) : (\n                  <CButton color=\"primary\" variant=\"outline\" type=\"submit\">\n                    Submit\n                  </CButton>\n                )}\n              </CCol>\n            </CRow>\n            <CRow className=\"mt-2\">\n              {message && <p className=\"error-message alert alert-danger\">{message}</p>}\n            </CRow>\n          </CCardFooter>\n        </CForm>\n      </CCard>\n      <CModal\n        backdrop=\"static\"\n        visible={modalRoti}\n        className=\"modal-lg\"\n        onClose={() => {\n          setModalRoti(false)\n          setMessage('')\n          setLoading(false)\n        }}\n      >\n        <CModalHeader closeButton>\n          <CModalTitle>Pilih Roti</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CTable striped bordered responsive>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell>No</CTableHeaderCell>\n                <CTableHeaderCell>Nama Roti</CTableHeaderCell>\n                <CTableHeaderCell>Stok Roti</CTableHeaderCell>\n                <CTableHeaderCell>Rasa Roti</CTableHeaderCell>\n                <CTableHeaderCell>Harga Satuan</CTableHeaderCell>\n                <CTableHeaderCell>Jumlah Roti</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {dataRoti.length === 0 ? (\n                <tr>\n                  <td colSpan=\"6\" className=\"text-center\">\n                    Tidak ada data.\n                  </td>\n                </tr>\n              ) : (\n                dataRoti.map((roti, index) => (\n                  <CTableRow key={index}>\n                    <CTableDataCell>{index + 1}</CTableDataCell>\n                    <CTableDataCell>{roti.nama_roti}</CTableDataCell>\n                    <CTableDataCell>{roti.stok_roti}</CTableDataCell>\n                    <CTableDataCell>{roti.rasa_roti}</CTableDataCell>\n                    <CTableDataCell>{roti.harga_satuan_roti}</CTableDataCell>\n                    <CTableDataCell>\n                      <CForm>\n                        <CFormInput\n                          size=\"sm\"\n                          name=\"jumlah_roti\"\n                          value={roti.jumlah_roti_dikirim}\n                          onChange={(e) => handleJumlahRoti(roti, e)}\n                          required\n                        />\n                      </CForm>\n                    </CTableDataCell>\n                  </CTableRow>\n                ))\n              )}\n            </CTableBody>\n          </CTable>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"secondary\"\n            onClick={() => {\n              setModalRoti(false)\n              setLoading(false)\n            }}\n          >\n            Close\n          </CButton>\n          {loading ? (\n            <CButton color=\"primary\" disabled>\n              <CSpinner color=\"info\" size=\"sm\" />\n            </CButton>\n          ) : (\n            <CButton color=\"primary\" onClick={tambahRoti}>\n              Selesai\n            </CButton>\n          )}\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\nexport default FormPengiriman\n","export var cilTrash = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"];\n"],"names":["FormPengiriman","dataRoti","setDataRoti","useState","message","setMessage","loading","setLoading","navigate","useNavigate","dataRekomendasi","setDataRekomendasi","modalRoti","setModalRoti","formData","setFormData","tanggal","Date","toLocaleDateString","kode_lapak","nama_lapak","nama_kurir","dataArray","setDataArray","useEffect","async","dataTransaksi","JSON","parse","localStorage","getItem","responseRekomendasi","axios","get","console","log","data","mappedFilteredData","filter","transaksi","map","kode_roti","jumlah_roti_transaksi","jumlah_roti_rotibasi","calculated_value","initRoti","roti","nama_roti","stok_roti","rasa_roti","harga_satuan_roti","jumlah_roti_dikirim","length","dataRecom","existingRoti","matchedRoti","find","array","i","j","Math","floor","random","shuffleArray","Array","from","_","index","slice","forEach","error","fetchData","_jsxs","_Fragment","children","_jsx","CCard","CForm","onSubmit","e","preventDefault","nonZeroDataArray","item","jumlah_roti","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","onmouseleave","fire","icon","title","toString","post","concat","text","confirmButtonText","then","result","isConfirmed","window","location","href","response","removeItem","catch","CCardHeader","CCardBody","CRow","CCol","xs","CInputGroup","className","CFormInput","name","floatingLabel","value","disabled","placeholder","CFormTextarea","md","CButton","variant","onClick","CIcon","cilBurger","CTable","striped","bordered","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","colSpan","CTableDataCell","color","handleDeleteRoti","showCancelButton","confirmButtonColor","cancelButtonColor","updatedDataRoti","splice","cilTrash","CCardFooter","type","CSpinner","size","CModal","backdrop","visible","onClose","CModalHeader","closeButton","CModalTitle","CModalBody","onChange","handleJumlahRoti","event","inputValue","target","jumlahRoti","parseInt","prevData","newData","existingItem","required","CModalFooter","tambahRoti","isValid","every","newDataArray"],"sourceRoot":""}