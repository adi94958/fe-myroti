{"version":3,"file":"static/js/663.28c7cc3c.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","../node_modules/@coreui/icons/src/free/cil-user.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport logo from '../../../assets/images/MyRoti.png'\nimport axios from 'axios'\n\nconst Login = () => {\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: '',\n  })\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const infoLogin = JSON.parse(localStorage.getItem('dataLogin'))\n    if (infoLogin != null) {\n      navigate('/dashboard')\n    }\n  }, [])\n\n  const handleUsername = (e) => {\n    const inputValue = e.target.value\n    setLoginForm({ ...loginForm, username: inputValue })\n  }\n\n  const handlePassword = (e) => {\n    const inputValue = e.target.value\n    setLoginForm({ ...loginForm, password: inputValue })\n  }\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      console.log(loginForm)\n      const response = await axios.post(`http://localhost:8000/api/login`, {\n        username: loginForm.username,\n        password: loginForm.password,\n      })\n      const infoLogin = response.data.user\n      console.log(response)\n      if (infoLogin && infoLogin.user_type === 'admin') {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          },\n        })\n        Toast.fire({\n          icon: 'success',\n          title: 'Signed in Successfully',\n        })\n        localStorage.setItem(\n          `dataLogin`,\n          JSON.stringify({\n            nama: infoLogin.username,\n            user_type: infoLogin.user_type,\n          }),\n        )\n      } else if (infoLogin && infoLogin.user_type === 'kurir') {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          },\n        })\n        Toast.fire({\n          icon: 'success',\n          title: 'Signed in Successfully',\n        })\n        localStorage.setItem(\n          `dataLogin`,\n          JSON.stringify({\n            nama: infoLogin.nama,\n            user_type: infoLogin.user_type,\n            id: infoLogin.id_kurir,\n          }),\n        )\n      } else {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          },\n        })\n        Toast.fire({\n          icon: 'success',\n          title: 'Signed in Successfully',\n        })\n        localStorage.setItem(\n          `dataLogin`,\n          JSON.stringify({\n            nama: infoLogin.nama,\n            user_type: infoLogin.user_type,\n          }),\n        )\n      }\n      navigate('/')\n    } catch (error) {\n      console.log('Full error response:', error.response)\n      if (error.response && error.response.data && error.response.data.message) {\n        const resMessage =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          },\n        })\n        Toast.fire({\n          icon: 'error',\n          title: `${resMessage}`,\n        })\n      }\n    }\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        value={loginForm.username}\n                        onChange={handleUsername}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        value={loginForm.password}\n                        onChange={handlePassword}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" onClick={handleLogin}>\n                          Login\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"bg-warning py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <img src={logo} alt=\"MyRoti Logo\" />\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n"],"names":["Login","loginForm","setLoginForm","useState","username","password","navigate","useNavigate","useEffect","JSON","parse","localStorage","getItem","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","value","onChange","e","inputValue","target","cilLockLocked","type","xs","CButton","color","onClick","async","preventDefault","console","log","response","axios","post","infoLogin","data","user","user_type","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","fire","title","setItem","stringify","nama","id","id_kurir","error","message","resMessage","toString","concat","style","width","src","logo","alt"],"sourceRoot":""}