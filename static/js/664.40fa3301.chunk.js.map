{"version":3,"file":"static/js/664.40fa3301.chunk.js","mappings":"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","sources":["views/Pemilik/DataPemilik.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CModalTitle,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CBadge,\n  CWidgetStatsF,\n  CButtonGroup,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { cilSearch, cilUserPlus, cilTrash } from '@coreui/icons'\nimport { getStyle } from '@coreui/utils'\nimport { Link } from 'react-router-dom'\n\nconst DataPemilik = () => {\n  const [StatusData, setStatusData] = useState('weekly')\n  const [dataText, setDataText] = useState('Senin - Minggu')\n  const [dataWeekly, setWeekly] = useState({\n    Monday: 0,\n    Tuesday: 0,\n    Wednesday: 0,\n    Thursday: 0,\n    Friday: 0,\n    Saturday: 0,\n    Sunday: 0,\n  })\n  const [dataMonthly, setMonthly] = useState({\n    January: 0,\n    February: 0,\n    March: 0,\n    April: 0,\n    May: 0,\n    June: 0,\n    July: 0,\n    August: 0,\n    September: 0,\n    October: 0,\n    November: 0,\n    December: 0,\n  })\n  const [Income, setIncome] = useState({\n    daily_income: 0,\n    monthly_income: 0,\n    yearly_income: 0,\n    average_daily_sales: 0,\n    average_monthly_sales: 0,\n    average_yearly_sales: 0,\n  })\n  const [visible, setVisible] = useState(false)\n  const chartRef = useRef(null)\n\n  useEffect(() => {\n    handleData()\n    handleWeekly()\n    handleMonthly()\n  }, [])\n\n  useEffect(() => {\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\n      if (chartRef.current) {\n        setTimeout(() => {\n          chartRef.current.options.scales.x.grid.borderColor = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartRef.current.options.scales.x.grid.color = getStyle('--cui-border-color-translucent')\n          chartRef.current.options.scales.x.ticks.color = getStyle('--cui-body-color')\n          chartRef.current.options.scales.y.grid.borderColor = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartRef.current.options.scales.y.grid.color = getStyle('--cui-border-color-translucent')\n          chartRef.current.options.scales.y.ticks.color = getStyle('--cui-body-color')\n          chartRef.current.update()\n        })\n      }\n    })\n  }, [chartRef])\n\n  const handleData = () => {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/pemilik/income')\n      .then((response) => {\n        console.log(response.data)\n        setIncome(response.data)\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error)\n      })\n  }\n\n  const handleWeekly = () => {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/pemilik/minggu')\n      .then((response) => {\n        console.log(response.data)\n        setWeekly(response.data)\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error)\n      })\n  }\n\n  const handleMonthly = () => {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/pemilik/bulan')\n      .then((response) => {\n        console.log(response.data)\n        setMonthly(response.data)\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error)\n      })\n  }\n\n  const handleButtonWeekly = () => {\n    setStatusData('weekly')\n    setDataText('Senin - Minggu')\n  }\n\n  const handleButtonMonthly = () => {\n    setStatusData('monthly')\n    setDataText('January - December ')\n  }\n\n  return (\n    <div>\n      <CRow className=\"g-3\">\n        <CCol xs={12} lg={4}>\n          <CWidgetStatsF\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilSearch} size=\"xl\" />}\n            padding={false}\n            title=\"Jumlah Harian\"\n            value={Income.daily_income}\n            color=\"primary\"\n          />\n        </CCol>\n        <CCol xs={12} lg={4}>\n          <CWidgetStatsF\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilSearch} size=\"xl\" />}\n            padding={false}\n            title=\"Jumlah Bulanan\"\n            value={Income.monthly_income}\n            color=\"info\"\n          />\n        </CCol>\n        <CCol xs={12} lg={4}>\n          <CWidgetStatsF\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilSearch} size=\"xl\" />}\n            padding={false}\n            title=\"Jumlah Tahunan\"\n            value={Income.yearly_income}\n            color=\"warning\"\n          />\n        </CCol>\n      </CRow>\n      <CRow className=\"g-3\">\n        <CCol xs={12} lg={4}>\n          <CWidgetStatsF\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilSearch} size=\"xl\" />}\n            padding={false}\n            title=\"Rata-Rata Harian\"\n            value={Income.average_daily_sales}\n            color=\"primary\"\n          />\n        </CCol>\n        <CCol xs={12} lg={4}>\n          <CWidgetStatsF\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilSearch} size=\"xl\" />}\n            padding={false}\n            title=\"Rata-Rata Bulanan\"\n            value={Income.average_monthly_sales}\n            color=\"info\"\n          />\n        </CCol>\n        <CCol xs={12} lg={4}>\n          <CWidgetStatsF\n            className=\"mb-3\"\n            icon={<CIcon width={24} icon={cilSearch} size=\"xl\" />}\n            padding={false}\n            title=\"Rata-Rata Tahunan\"\n            value={Income.average_yearly_sales}\n            color=\"warning\"\n          />\n        </CCol>\n      </CRow>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Penjualan\n              </h4>\n              <div className=\"small text-body-secondary\">{dataText}</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButtonGroup className=\"float-end me-3\">\n                <CButton color=\"outline-secondary\" className=\"mx-0\" onClick={handleButtonWeekly}>\n                  Weekly\n                </CButton>\n                <CButton color=\"outline-secondary\" className=\"mx-0\" onClick={handleButtonMonthly}>\n                  Monthly\n                </CButton>\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          {StatusData === 'monthly' ? (\n            <CChartLine\n              ref={chartRef}\n              style={{ height: '300px', marginTop: '40px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                ],\n                datasets: [\n                  {\n                    backgroundColor: `rgba(${getStyle('--cui-info-rgb')}, .1)`,\n                    borderColor: getStyle('--cui-info'),\n                    pointHoverBackgroundColor: getStyle('--cui-info'),\n                    borderWidth: 2,\n                    data: [\n                      dataMonthly.January,\n                      dataMonthly.February,\n                      dataMonthly.March,\n                      dataMonthly.April,\n                      dataMonthly.May,\n                      dataMonthly.June,\n                      dataMonthly.July,\n                      dataMonthly.August,\n                      dataMonthly.September,\n                      dataMonthly.October,\n                      dataMonthly.November,\n                      dataMonthly.December,\n                    ],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                  tooltip: {\n                    callbacks: {\n                      label: function (context) {\n                        let label = context.dataset.label || ''\n                        if (label) {\n                          label += ': '\n                        }\n                        if (context.parsed.y !== null) {\n                          label +=\n                            'Rp. ' +\n                            context.parsed.y.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                        }\n                        return label\n                      },\n                    },\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      color: getStyle('--cui-border-color-translucent'),\n                      drawOnChartArea: false,\n                    },\n                    ticks: {\n                      color: getStyle('--cui-body-color'),\n                    },\n                  },\n                  y: {\n                    border: {\n                      color: getStyle('--cui-border-color-translucent'),\n                    },\n                    grid: {\n                      color: getStyle('--cui-border-color-translucent'),\n                    },\n                    ticks: {\n                      beginAtZero: true,\n                      color: getStyle('--cui-body-color'),\n                      max: 250,\n                      maxTicksLimit: 5,\n                      stepSize: Math.ceil(250 / 5),\n                      callback: function (value) {\n                        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                      },\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                    hoverBorderWidth: 3,\n                  },\n                },\n              }}\n            />\n          ) : (\n            <CChartLine\n              ref={chartRef}\n              style={{ height: '300px', marginTop: '40px' }}\n              data={{\n                labels: ['Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu', 'Minggu'],\n                datasets: [\n                  {\n                    backgroundColor: `rgba(${getStyle('--cui-info-rgb')}, .1)`,\n                    borderColor: getStyle('--cui-info'),\n                    pointHoverBackgroundColor: getStyle('--cui-info'),\n                    borderWidth: 2,\n                    data: [\n                      dataWeekly.Monday,\n                      dataWeekly.Tuesday,\n                      dataWeekly.Wednesday,\n                      dataWeekly.Thursday,\n                      dataWeekly.Friday,\n                      dataWeekly.Saturday,\n                      dataWeekly.Sunday,\n                    ],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                  tooltip: {\n                    callbacks: {\n                      label: function (context) {\n                        let label = context.dataset.label || ''\n                        if (label) {\n                          label += ': '\n                        }\n                        if (context.parsed.y !== null) {\n                          label +=\n                            'Rp. ' +\n                            context.parsed.y.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                        }\n                        return label\n                      },\n                    },\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      color: getStyle('--cui-border-color-translucent'),\n                      drawOnChartArea: false,\n                    },\n                    ticks: {\n                      color: getStyle('--cui-body-color'),\n                    },\n                  },\n                  y: {\n                    border: {\n                      color: getStyle('--cui-border-color-translucent'),\n                    },\n                    grid: {\n                      color: getStyle('--cui-border-color-translucent'),\n                    },\n                    ticks: {\n                      beginAtZero: true,\n                      color: getStyle('--cui-body-color'),\n                      max: 250,\n                      maxTicksLimit: 5,\n                      stepSize: Math.ceil(250 / 5),\n                      callback: function (value) {\n                        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                      },\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                    hoverBorderWidth: 3,\n                  },\n                },\n              }}\n            />\n          )}\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default DataPemilik\n"],"names":["DataPemilik","StatusData","setStatusData","useState","dataText","setDataText","dataWeekly","setWeekly","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","dataMonthly","setMonthly","January","February","March","April","May","June","July","August","September","October","November","December","Income","setIncome","daily_income","monthly_income","yearly_income","average_daily_sales","average_monthly_sales","average_yearly_sales","visible","setVisible","chartRef","useRef","useEffect","handleData","handleWeekly","handleMonthly","document","documentElement","addEventListener","current","setTimeout","options","scales","x","grid","borderColor","getStyle","color","ticks","y","update","axios","get","then","response","console","log","data","catch","error","_jsxs","children","CRow","className","_jsx","CCol","xs","lg","CWidgetStatsF","icon","CIcon","width","cilSearch","size","padding","title","value","CCard","CCardBody","sm","id","CButtonGroup","CButton","onClick","handleButtonWeekly","handleButtonMonthly","CChartLine","ref","style","height","marginTop","labels","datasets","backgroundColor","concat","pointHoverBackgroundColor","borderWidth","fill","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","label","context","dataset","parsed","toString","replace","drawOnChartArea","border","beginAtZero","max","maxTicksLimit","stepSize","Math","ceil","callback","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth"],"sourceRoot":""}