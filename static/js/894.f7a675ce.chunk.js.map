{"version":3,"file":"static/js/894.f7a675ce.chunk.js","mappings":"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","sources":["../node_modules/@coreui/icons/src/free/cil-cart.ts","views/koordinator/pengiriman/Pengiriman.js","../node_modules/@coreui/icons/src/free/cil-search.ts"],"sourcesContent":["export var cilCart = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='160 96.039 160 128.039 464 128.039 464 191.384 428.5 304.039 149.932 304.039 109.932 16 16 16 16 48 82.068 48 122.068 336.039 451.968 336.039 496 196.306 496 96.039 160 96.039' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M176.984,368.344a64.073,64.073,0,0,0-64,64h0a64,64,0,0,0,128,0h0A64.072,64.072,0,0,0,176.984,368.344Zm0,96a32,32,0,1,1,32-32A32.038,32.038,0,0,1,176.984,464.344Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400.984,368.344a64.073,64.073,0,0,0-64,64h0a64,64,0,0,0,128,0h0A64.072,64.072,0,0,0,400.984,368.344Zm0,96a32,32,0,1,1,32-32A32.038,32.038,0,0,1,400.984,464.344Z' class='ci-primary'/>\"];\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CInputGroup,\n  CFormInput,\n  CCol,\n  CRow,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport { cilCart, cilSearch } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useNavigate } from 'react-router-dom'\n\nconst Pengiriman = () => {\n  const [data, setData] = useState([])\n  const [searchText, setSearchText] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage, setItemsPerPage] = useState(10)\n  const itemsPerPageOptions = [10, 25, 50, data.length] // Jumlah data per halaman\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    handleDataTransaksi()\n  }, [])\n\n  function handleDataTransaksi() {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/koordinator/transaksi')\n      .then((response) => {\n        setData(response.data)\n      })\n      .catch((error) => {\n        console.error('Error:', error)\n      })\n  }\n\n  function handleKirim(item) {\n    localStorage.setItem(\n      'dataTransaksi',\n      JSON.stringify({\n        kode_lapak: item.kode_lapak,\n        nama_lapak: item.nama_lapak,\n        nama_kurir: item.kurir.nama,\n      }),\n    )\n    navigate('/pengiriman/kelola/kirim')\n  }\n\n  const searchableFields = ['nama_lapak', 'alamat_lapak', 'no_telp', 'kurir.nama', 'kurir.no_telp']\n\n  const filteredData = data.filter((lapak) => {\n    return (\n      searchText === '' ||\n      searchableFields.some((field) => {\n        const fieldKeys = field.split('.') // Pisahkan kunci objek bersarang\n        const fieldValue = getFieldNestedValue(lapak, fieldKeys)\n\n        return (\n          typeof fieldValue === 'string' &&\n          fieldValue.toLowerCase().includes(searchText.toLowerCase())\n        )\n      })\n    )\n  })\n\n  // Fungsi untuk mendapatkan nilai dari objek bersarang\n  function getFieldNestedValue(obj, keys) {\n    return keys.reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : ''), obj)\n  }\n\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex = itemsPerPage === data.length ? data.length : startIndex + itemsPerPage\n  const paginatedData = filteredData.slice(startIndex, endIndex)\n\n  const handleItemsPerPageChange = (value) => {\n    setCurrentPage(1)\n    setItemsPerPage(value)\n  }\n\n  const startRange = startIndex + 1\n  const endRange = Math.min(startIndex + itemsPerPage, filteredData.length)\n  const isDataEmpty = filteredData.length === 0\n\n  return (\n    <CCard>\n      <CCardHeader>Data Pengiriman</CCardHeader>\n      <CCardBody>\n        <CForm className=\"mb-3\">\n          <CRow>\n            <CCol md={8} xs={6}>\n              <CInputGroup>\n                <CFormInput\n                  type=\"text\"\n                  placeholder=\"Search...\"\n                  value={searchText}\n                  onChange={(e) => setSearchText(e.target.value)}\n                />\n                <CButton variant=\"outline\" className=\"ms-2\">\n                  <CIcon icon={cilSearch} />\n                </CButton>\n              </CInputGroup>\n            </CCol>\n            <CCol md={2} xs={3}>\n              <CFormLabel>Rows Per Page:</CFormLabel>\n            </CCol>\n            <CCol md={2} xs={3}>\n              <CFormSelect\n                className=\"form-select\"\n                value={itemsPerPage}\n                onChange={(e) => handleItemsPerPageChange(parseInt(e.target.value))}\n              >\n                {itemsPerPageOptions.map((option) => (\n                  <option key={option} value={option}>\n                    {option === data.length ? 'All' : option}\n                  </option>\n                ))}\n              </CFormSelect>\n            </CCol>\n          </CRow>\n        </CForm>\n        <CTable striped bordered responsive>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell>No</CTableHeaderCell>\n              <CTableHeaderCell>Lapak</CTableHeaderCell>\n              <CTableHeaderCell>Alamat Lapak</CTableHeaderCell>\n              <CTableHeaderCell>No Telp Lapak</CTableHeaderCell>\n              <CTableHeaderCell>Kurir</CTableHeaderCell>\n              <CTableHeaderCell>No Telp Kurir</CTableHeaderCell>\n              <CTableHeaderCell>Aksi</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {paginatedData.length === 0 ? (\n              <tr>\n                <td colSpan=\"7\" className=\"text-center\">\n                  Tidak ada data.\n                </td>\n              </tr>\n            ) : (\n              paginatedData.map((item, index) => (\n                <CTableRow key={index}>\n                  <CTableDataCell>{startRange + index}</CTableDataCell>\n                  <CTableDataCell>{item.nama_lapak}</CTableDataCell>\n                  <CTableDataCell>{item.alamat_lapak}</CTableDataCell>\n                  <CTableDataCell>{item.no_telp}</CTableDataCell>\n                  <CTableDataCell>{item.kurir.nama}</CTableDataCell>\n                  <CTableDataCell>{item.kurir.no_telp}</CTableDataCell>\n                  <CTableDataCell>\n                    <CButton\n                      color=\"warning\"\n                      variant=\"outline\"\n                      className=\"ms-2\"\n                      title=\"Kirim\"\n                      onClick={() => handleKirim(item)}\n                    >\n                      <CIcon icon={cilCart} className=\"mx-12 me-2\" />\n                      Kirim\n                    </CButton>\n                  </CTableDataCell>\n                </CTableRow>\n              ))\n            )}\n          </CTableBody>\n        </CTable>\n        <CRow className=\"mt-2 mb-2\">\n          <CCol md={4} xs={8}>\n            Total Rows: {filteredData.length} Page: {startRange} of {endRange}\n          </CCol>\n        </CRow>\n        <CPagination\n          activepage={currentPage}\n          pages={Math.ceil(filteredData.length / itemsPerPage)}\n          onActivePageChange={setCurrentPage}\n          align=\"center\"\n          doublearrows=\"false\"\n        >\n          <CPaginationItem\n            onClick={() => !isDataEmpty && setCurrentPage(currentPage - 1)}\n            disabled={currentPage === 1 || isDataEmpty}\n            style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n          >\n            Prev\n          </CPaginationItem>\n\n          {Array.from({ length: Math.ceil(filteredData.length / itemsPerPage) }, (_, index) => {\n            const pageIndex = index + 1\n            const totalPages = Math.ceil(filteredData.length / itemsPerPage)\n\n            // Display three consecutive pages centered around the current page\n            if (\n              (pageIndex >= currentPage - 1 && pageIndex <= currentPage + 1) ||\n              totalPages <= 3 ||\n              (currentPage === 1 && pageIndex <= 3) ||\n              (currentPage === totalPages && pageIndex >= totalPages - 2)\n            ) {\n              return (\n                <CPaginationItem\n                  key={pageIndex}\n                  active={pageIndex === currentPage}\n                  onClick={() => setCurrentPage(pageIndex)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  {pageIndex}\n                </CPaginationItem>\n              )\n            }\n\n            // Display ellipses for pages before the current page\n            if (pageIndex === 1 && currentPage > 2) {\n              return (\n                <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                  ...\n                </CPaginationItem>\n              )\n            }\n\n            // Display ellipses for pages after the current page\n            if (pageIndex === totalPages && currentPage < totalPages - 1) {\n              return (\n                <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                  ...\n                </CPaginationItem>\n              )\n            }\n\n            return null\n          })}\n\n          <CPaginationItem\n            onClick={() => !isDataEmpty && setCurrentPage(currentPage + 1)}\n            disabled={currentPage === Math.ceil(filteredData.length / itemsPerPage) || isDataEmpty}\n            style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n          >\n            Next\n          </CPaginationItem>\n        </CPagination>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default Pengiriman\n","export var cilSearch = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M479.6,399.716l-81.084-81.084-62.368-25.767A175.014,175.014,0,0,0,368,192c0-97.047-78.953-176-176-176S16,94.953,16,192,94.953,368,192,368a175.034,175.034,0,0,0,101.619-32.377l25.7,62.2L400.4,478.911a56,56,0,1,0,79.2-79.195ZM48,192c0-79.4,64.6-144,144-144s144,64.6,144,144S271.4,336,192,336,48,271.4,48,192ZM456.971,456.284a24.028,24.028,0,0,1-33.942,0l-76.572-76.572-23.894-57.835L380.4,345.771l76.573,76.572A24.028,24.028,0,0,1,456.971,456.284Z' class='ci-primary'/>\"];\n"],"names":["cilCart","Pengiriman","data","setData","useState","searchText","setSearchText","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","itemsPerPageOptions","length","navigate","useNavigate","useEffect","axios","get","then","response","catch","error","console","searchableFields","filteredData","filter","lapak","some","field","fieldKeys","split","fieldValue","obj","reduce","acc","key","undefined","toLowerCase","includes","startIndex","endIndex","paginatedData","slice","startRange","endRange","Math","min","isDataEmpty","_jsxs","CCard","children","_jsx","CCardHeader","CCardBody","CForm","className","CRow","CCol","md","xs","CInputGroup","CFormInput","type","placeholder","value","onChange","e","target","CButton","variant","CIcon","icon","cilSearch","CFormLabel","CFormSelect","handleItemsPerPageChange","parseInt","map","option","CTable","striped","bordered","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","colSpan","item","index","CTableDataCell","nama_lapak","alamat_lapak","no_telp","kurir","nama","color","title","onClick","localStorage","setItem","JSON","stringify","kode_lapak","nama_kurir","handleKirim","CPagination","activepage","pages","ceil","onActivePageChange","align","doublearrows","CPaginationItem","disabled","style","cursor","Array","from","_","pageIndex","totalPages","active"],"sourceRoot":""}