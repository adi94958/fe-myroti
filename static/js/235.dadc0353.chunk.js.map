{"version":3,"file":"static/js/235.dadc0353.chunk.js","mappings":"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","sources":["views/admin/kurir/FormTambahKurir.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CFormSelect,\n  CRow,\n  CSpinner,\n} from '@coreui/react'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\n\nconst FormTambahKurir = () => {\n  const [message, setMessage] = useState('')\n  const [dataArea, setDataArea] = useState([])\n  const [count, setCount] = useState({\n    nama: 0,\n    username: 0,\n    password: 0,\n  })\n  const [loading, setLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    nama: '',\n    username: '',\n    password: '',\n    area: null,\n  })\n\n  useEffect(() => {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/area')\n      .then((response) => {\n        console.log(response.data)\n        setDataArea(response.data)\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error)\n      })\n  }, [])\n\n  const handleNamaChange = (e) => {\n    const inputValue = e.target.value\n    if (inputValue.length <= 50) {\n      setFormData({ ...formData, nama: inputValue })\n      setCount({ ...count, nama: inputValue.length })\n    } else {\n      setFormData({ ...formData, nama: inputValue.slice(0, 50) })\n    }\n  }\n\n  const handleUsernameChange = (e) => {\n    const inputValue = e.target.value\n    if (inputValue.length <= 25) {\n      setFormData({ ...formData, username: inputValue })\n      setCount({ ...count, username: inputValue.length })\n    } else {\n      setFormData({ ...formData, username: inputValue.slice(0, 25) })\n    }\n  }\n\n  const handlePasswordChange = (e) => {\n    const inputValue = e.target.value\n    if (inputValue.length <= 25) {\n      setFormData({ ...formData, password: inputValue })\n      setCount({ ...count, password: inputValue.length })\n    } else {\n      setFormData({ ...formData, password: inputValue.slice(0, 25) })\n    }\n  }\n\n  const handleAreaChange = (e) => {\n    const inputValue = e.target.value\n    setFormData({ ...formData, area: inputValue })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    const newUser = {\n      nama: formData.nama,\n      username: formData.username,\n      password: formData.password,\n      area_id: formData.area,\n      user_type: 'kurir',\n    }\n    console.log(newUser)\n\n    try {\n      const response = await axios.post(\n        'https://be-myroti-production.up.railway.app/api/kurir/registrasi',\n        newUser,\n      )\n      Swal.fire({\n        title: 'Berhasil',\n        text: `Data Kurir berhasil ditambahkan.`,\n        icon: 'success',\n        confirmButtonText: 'OK',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          window.location.href = '/admin/kurir'\n          console.log('User created successfully:', response.data)\n        }\n      })\n    } catch (error) {\n      console.log('Full error response:', error.response)\n      if (error.response && error.response.data && error.response.data.message) {\n        const resMessage =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n        setMessage(resMessage)\n      }\n      setLoading(false)\n    }\n  }\n\n  return (\n    <>\n      <CCard>\n        <CForm onSubmit={handleSubmit}>\n          <CCardHeader>Form Tambah Akun Kurir</CCardHeader>\n          <CCardBody>\n            <CRow>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormInput\n                    name=\"Nama\"\n                    placeholder=\"Nama\"\n                    floatingLabel=\"Nama\"\n                    value={formData.nama}\n                    required\n                    onChange={handleNamaChange}\n                  />\n                  <CInputGroupText size=\"sm\">{count.nama}/50</CInputGroupText>\n                </CInputGroup>\n              </CCol>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormInput\n                    name=\"Username\"\n                    placeholder=\"Username\"\n                    floatingLabel=\"Username\"\n                    value={formData.username}\n                    required\n                    onChange={handleUsernameChange}\n                  />\n                  <CInputGroupText size=\"sm\">{count.username}/25</CInputGroupText>\n                </CInputGroup>\n              </CCol>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CFormInput\n                    name=\"Password\"\n                    placeholder=\"Password\"\n                    floatingLabel=\"Password\"\n                    value={formData.password}\n                    required\n                    onChange={handlePasswordChange}\n                  />\n                  <CInputGroupText size=\"sm\">{count.password}/25</CInputGroupText>\n                </CInputGroup>\n              </CCol>\n              <CCol xs={12}>\n                <CInputGroup className=\"mb-3\">\n                  <CInputGroupText size=\"sm\">Pilih Area</CInputGroupText>\n                  <CFormSelect id=\"inputGroupSelect01\" onChange={handleAreaChange}>\n                    {dataArea.map((item) => (\n                      <option key={item.area_id} value={item.area_id}>\n                        {item.area_distribusi}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </CInputGroup>\n              </CCol>\n            </CRow>\n          </CCardBody>\n          <CCardFooter>\n            <CRow>\n              <CCol md={1}>\n                <Link to={`/admin/kurir`}>\n                  <CButton color=\"danger\" variant=\"outline\" className=\"ms-2\" title=\"Back\">\n                    Back\n                  </CButton>\n                </Link>\n              </CCol>\n              <CCol xs={1}>\n                {loading ? (\n                  <CButton color=\"primary\" variant=\"outline\" type=\"submit\" disabled>\n                    <CSpinner color=\"info\" size=\"sm\" />\n                  </CButton>\n                ) : (\n                  <CButton color=\"primary\" variant=\"outline\" type=\"submit\">\n                    Submit\n                  </CButton>\n                )}\n              </CCol>\n            </CRow>\n            <CRow className=\"mt-2\">\n              {message && <p className=\"error-message alert alert-danger\">{message}</p>}\n            </CRow>\n          </CCardFooter>\n        </CForm>\n      </CCard>\n    </>\n  )\n}\nexport default FormTambahKurir\n"],"names":["FormTambahKurir","message","setMessage","useState","dataArea","setDataArea","count","setCount","nama","username","password","loading","setLoading","formData","setFormData","area","useEffect","axios","get","then","response","console","log","data","catch","error","_jsx","_Fragment","children","CCard","_jsxs","CForm","onSubmit","async","e","preventDefault","newUser","area_id","user_type","post","Swal","title","text","icon","confirmButtonText","result","isConfirmed","window","location","href","resMessage","toString","CCardHeader","CCardBody","CRow","CCol","xs","CInputGroup","className","CFormInput","name","placeholder","floatingLabel","value","required","onChange","inputValue","target","length","slice","CInputGroupText","size","CFormSelect","id","map","item","area_distribusi","CCardFooter","md","Link","to","CButton","color","variant","type","disabled","CSpinner"],"sourceRoot":""}