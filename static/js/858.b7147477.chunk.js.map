{"version":3,"file":"static/js/858.b7147477.chunk.js","mappings":"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","sources":["views/koordinator/pengiriman/DaftarPengiriman.js","../node_modules/@coreui/icons/src/free/cil-search.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\nimport {\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CModalTitle,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CFormInput,\n  CInputGroup,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilSearch, cilUserPlus, cilTrash } from '@coreui/icons'\n\nconst DaftarPengiriman = () => {\n  const [searchText, setSearchText] = useState('')\n  const [dataRoti, setDataRoti] = useState([])\n  const [visible, setVisible] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [foto, setFoto] = useState('')\n  const [dataTransaksi, setDataTransaksi] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage, setItemsPerPage] = useState(10)\n  const itemsPerPageOptions = [10, 25, 50, dataTransaksi.length] // Jumlah data per halaman\n\n  useEffect(() => {\n    handleData()\n  }, [])\n\n  const handleData = () => {\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/kurir/transaksi')\n      .then((response) => {\n        console.log(response.data)\n        setDataTransaksi(response.data)\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error)\n      })\n  }\n\n  const formatDate = (date) => {\n    const newDate = new Date(date)\n    const formattedDate = `${newDate.getDate().toString().padStart(2, '0')}-${(\n      newDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${newDate.getFullYear()}`\n    return formattedDate\n  }\n\n  const searchableFields = ['lapak.nama_lapak', 'lapak.kurir.nama', 'status', 'tanggal_pengiriman']\n\n  const filteredData = dataTransaksi.filter((lapak) => {\n    return (\n      searchText === '' ||\n      searchableFields.some((field) => {\n        const fieldKeys = field.split('.') // Pisahkan kunci objek bersarang\n        const fieldValue = getFieldNestedValue(lapak, fieldKeys)\n\n        return (\n          typeof fieldValue === 'string' &&\n          fieldValue.toLowerCase().includes(searchText.toLowerCase())\n        )\n      })\n    )\n  })\n\n  function getFieldNestedValue(obj, keys) {\n    return keys.reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : ''), obj)\n  }\n\n  const handleRotiClick = (lapak) => {\n    setDataRoti(lapak.transaksi_roti)\n    setVisible(true)\n    console.log(dataTransaksi)\n    console.log(dataRoti)\n  }\n\n  const handleFoto = (lapak) => {\n    if (lapak.status === 'delivered') {\n      console.log(lapak.bukti_pengiriman)\n      axios\n        .get(\n          'https://be-myroti-production.up.railway.app/api/koordinator/' + lapak.bukti_pengiriman,\n          {\n            responseType: 'blob',\n          },\n        )\n        .then((response) => {\n          const reader = new FileReader()\n          reader.onload = (event) => {\n            const dataURL = event.target.result\n            setFoto(dataURL)\n            setOpen(true)\n          }\n          reader.readAsDataURL(response.data) // Read the blob response as data URL\n        })\n        .catch((error) => {\n          console.error('Error fetching data:', error)\n        })\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer)\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\n        },\n      })\n      Toast.fire({\n        icon: 'error',\n        title: 'Kurir Belum Sampai',\n      })\n    }\n  }\n\n  const handleDelete = (data) => {\n    Swal.fire({\n      title: `Apakah anda yakin ingin menghapus transaksi lapak ${data.lapak.nama_lapak}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Delete',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(\n            `https://be-myroti-production.up.railway.app/api/koordinator/transaksi/delete/${data.id_transaksi}`,\n          )\n          .then((response) => {\n            Swal.fire('Deleted!', 'Your file has been deleted.', 'success')\n            window.location.href = '/pengiriman/list'\n          })\n          .catch((error) => {\n            console.error('Error deleting data:', error)\n          })\n      }\n    })\n  }\n\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex =\n    itemsPerPage === dataTransaksi.length ? dataTransaksi.length : startIndex + itemsPerPage\n  const paginatedData = filteredData.slice(startIndex, endIndex)\n\n  const handleItemsPerPageChange = (value) => {\n    setCurrentPage(1)\n    setItemsPerPage(value)\n  }\n\n  const startRange = startIndex + 1\n  const endRange = Math.min(startIndex + itemsPerPage, filteredData.length)\n  const isDataEmpty = filteredData.length === 0\n\n  return (\n    <div>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>Data Pengiriman Kurir</CCardHeader>\n            <CCardBody>\n              <CForm className=\"mb-3\">\n                <CRow>\n                  <CCol md={8} xs={6}>\n                    <CInputGroup>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        value={searchText}\n                        onChange={(e) => setSearchText(e.target.value)}\n                      />\n                      <CButton variant=\"outline\" className=\"ms-2\">\n                        <CIcon icon={cilSearch} />\n                      </CButton>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol md={2} xs={3}>\n                    <CFormLabel>Rows Per Page:</CFormLabel>\n                  </CCol>\n                  <CCol md={2} xs={3}>\n                    <CFormSelect\n                      className=\"form-select\"\n                      value={itemsPerPage}\n                      onChange={(e) => handleItemsPerPageChange(parseInt(e.target.value))}\n                    >\n                      {itemsPerPageOptions.map((option) => (\n                        <option key={option} value={option}>\n                          {option === dataTransaksi.length ? 'All' : option}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </CCol>\n                </CRow>\n              </CForm>\n              <CTable striped bordered responsive>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell>No</CTableHeaderCell>\n                    <CTableHeaderCell>Lapak</CTableHeaderCell>\n                    <CTableHeaderCell>Alamat Lapak</CTableHeaderCell>\n                    <CTableHeaderCell>Kurir</CTableHeaderCell>\n                    <CTableHeaderCell>Tanggal Pengiriman</CTableHeaderCell>\n                    <CTableHeaderCell>Roti</CTableHeaderCell>\n                    <CTableHeaderCell>Bukti Pengiriman</CTableHeaderCell>\n                    <CTableHeaderCell>Status</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {paginatedData.length === 0 ? (\n                    <tr>\n                      <td colSpan=\"8\" className=\"text-center\">\n                        Tidak ada data.\n                      </td>\n                    </tr>\n                  ) : (\n                    paginatedData.map((lapak, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell>{startIndex + index + 1}</CTableDataCell>\n                        <CTableDataCell>{lapak.lapak.nama_lapak}</CTableDataCell>\n                        <CTableDataCell>{lapak.lapak.alamat_lapak}</CTableDataCell>\n                        <CTableDataCell>{lapak.lapak.kurir.nama}</CTableDataCell>\n                        <CTableDataCell>{formatDate(lapak.tanggal_pengiriman)}</CTableDataCell>\n                        <CTableDataCell>\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"ms-2\"\n                            title=\"Daftar Roti\"\n                            onClick={() => handleRotiClick(lapak)}\n                          >\n                            <CIcon icon={cilSearch} className=\"mx-12 me-2\" />\n                            Open Detail\n                          </CButton>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <CButton variant=\"outline\" size=\"sm\" onClick={() => handleFoto(lapak)}>\n                            Lihat\n                          </CButton>\n                        </CTableDataCell>\n                        <CTableDataCell\n                          style={{\n                            color:\n                              lapak.status === 'ready'\n                                ? 'green' // Assuming 'ready' status should display green text\n                                : lapak.status === 'on delivery'\n                                ? 'red' // 'on delivery' status will display red text\n                                : 'blue',\n                          }}\n                        >\n                          {lapak.status}\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              <CRow className=\"mt-2 mb-2\">\n                <CCol md={4} xs={8}>\n                  Total Rows: {filteredData.length} Page: {startRange} of {endRange}\n                </CCol>\n              </CRow>\n              <CPagination\n                activepage={currentPage}\n                pages={Math.ceil(filteredData.length / itemsPerPage)}\n                onActivePageChange={setCurrentPage}\n                align=\"center\"\n                doublearrows=\"false\"\n              >\n                <CPaginationItem\n                  onClick={() => !isDataEmpty && setCurrentPage(currentPage - 1)}\n                  disabled={currentPage === 1 || isDataEmpty}\n                  style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n                >\n                  Prev\n                </CPaginationItem>\n\n                {Array.from(\n                  { length: Math.ceil(filteredData.length / itemsPerPage) },\n                  (_, index) => {\n                    const pageIndex = index + 1\n                    const totalPages = Math.ceil(filteredData.length / itemsPerPage)\n\n                    // Display three consecutive pages centered around the current page\n                    if (\n                      (pageIndex >= currentPage - 1 && pageIndex <= currentPage + 1) ||\n                      totalPages <= 3 ||\n                      (currentPage === 1 && pageIndex <= 3) ||\n                      (currentPage === totalPages && pageIndex >= totalPages - 2)\n                    ) {\n                      return (\n                        <CPaginationItem\n                          key={pageIndex}\n                          active={pageIndex === currentPage}\n                          onClick={() => setCurrentPage(pageIndex)}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          {pageIndex}\n                        </CPaginationItem>\n                      )\n                    }\n\n                    // Display ellipses for pages before the current page\n                    if (pageIndex === 1 && currentPage > 2) {\n                      return (\n                        <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                          ...\n                        </CPaginationItem>\n                      )\n                    }\n\n                    // Display ellipses for pages after the current page\n                    if (pageIndex === totalPages && currentPage < totalPages - 1) {\n                      return (\n                        <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                          ...\n                        </CPaginationItem>\n                      )\n                    }\n\n                    return null\n                  },\n                )}\n\n                <CPaginationItem\n                  onClick={() => !isDataEmpty && setCurrentPage(currentPage + 1)}\n                  disabled={\n                    currentPage === Math.ceil(filteredData.length / itemsPerPage) || isDataEmpty\n                  }\n                  style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n                >\n                  Next\n                </CPaginationItem>\n              </CPagination>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CModal\n        backdrop=\"static\"\n        visible={visible}\n        className=\"modal\"\n        onClose={() => setVisible(false)}\n        aria-labelledby=\"VerticallyCenteredExample\"\n      >\n        <CModalHeader>\n          <CModalTitle id=\"VerticallyCenteredExample\">Data Roti</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CTable striped bordered responsive>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell>Nama Roti</CTableHeaderCell>\n                <CTableHeaderCell>Jumlah Roti</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {dataRoti.map((roti, index) => (\n                <CTableRow key={index}>\n                  <CTableDataCell>{roti.roti.nama_roti}</CTableDataCell>\n                  <CTableDataCell>{roti.jumlah_roti}</CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <CModal\n        backdrop=\"static\"\n        visible={open}\n        className=\"modal\"\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"VerticallyCenteredExample\"\n      >\n        <CModalHeader>\n          <CModalTitle id=\"VerticallyCenteredExample\">Preview Foto</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <img src={foto} alt=\"Preview\" style={{ maxWidth: '100%', height: 'auto' }} />\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setOpen(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default DaftarPengiriman\n","export var cilSearch = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M479.6,399.716l-81.084-81.084-62.368-25.767A175.014,175.014,0,0,0,368,192c0-97.047-78.953-176-176-176S16,94.953,16,192,94.953,368,192,368a175.034,175.034,0,0,0,101.619-32.377l25.7,62.2L400.4,478.911a56,56,0,1,0,79.2-79.195ZM48,192c0-79.4,64.6-144,144-144s144,64.6,144,144S271.4,336,192,336,48,271.4,48,192ZM456.971,456.284a24.028,24.028,0,0,1-33.942,0l-76.572-76.572-23.894-57.835L380.4,345.771l76.573,76.572A24.028,24.028,0,0,1,456.971,456.284Z' class='ci-primary'/>\"];\n"],"names":["DaftarPengiriman","searchText","setSearchText","useState","dataRoti","setDataRoti","visible","setVisible","open","setOpen","foto","setFoto","dataTransaksi","setDataTransaksi","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","itemsPerPageOptions","length","useEffect","handleData","axios","get","then","response","console","log","data","catch","error","formatDate","date","newDate","Date","concat","getDate","toString","padStart","getMonth","getFullYear","searchableFields","filteredData","filter","lapak","some","field","fieldKeys","split","fieldValue","obj","reduce","acc","key","undefined","toLowerCase","includes","startIndex","endIndex","paginatedData","slice","startRange","endRange","Math","min","isDataEmpty","_jsxs","children","_jsx","CRow","CCol","CCard","CCardHeader","CCardBody","CForm","className","md","xs","CInputGroup","CFormInput","type","placeholder","value","onChange","e","target","CButton","variant","CIcon","icon","cilSearch","CFormLabel","CFormSelect","handleItemsPerPageChange","parseInt","map","option","CTable","striped","bordered","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","colSpan","index","CTableDataCell","nama_lapak","alamat_lapak","kurir","nama","tanggal_pengiriman","color","size","title","onClick","transaksi_roti","handleRotiClick","status","bukti_pengiriman","responseType","reader","FileReader","onload","event","dataURL","result","readAsDataURL","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","fire","handleFoto","style","CPagination","activepage","pages","ceil","onActivePageChange","align","doublearrows","CPaginationItem","disabled","cursor","Array","from","_","pageIndex","totalPages","active","CModal","backdrop","onClose","CModalHeader","CModalTitle","id","CModalBody","roti","nama_roti","jumlah_roti","CModalFooter","src","alt","maxWidth","height"],"sourceRoot":""}