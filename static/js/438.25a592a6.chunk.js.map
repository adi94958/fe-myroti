{"version":3,"file":"static/js/438.25a592a6.chunk.js","mappings":"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","sources":["views/koordinator/roti/DataRoti.js","../node_modules/@coreui/icons/src/free/cil-pen.ts","../node_modules/@coreui/icons/src/free/cil-search.ts","../node_modules/@coreui/icons/src/free/cil-trash.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CForm,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CFormInput,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPen, cilTrash, cilSearch, cilBurger } from '@coreui/icons'\nimport { Link } from 'react-router-dom'\n\nconst KelolaDataDataRoti = () => {\n  const [searchText, setSearchText] = useState('') //State untuk seatch\n  const [dataRoti, setDataRoti] = useState([])\n  const navigate = useNavigate()\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage, setItemsPerPage] = useState(10)\n  const itemsPerPageOptions = [10, 25, 50, dataRoti.length] // Jumlah data per halaman\n\n  useEffect(() => {\n    // Menggunakan Axios untuk mengambil data dari API\n    axios\n      .get('https://be-myroti-production.up.railway.app/api/koordinator/dataroti')\n      .then((response) => {\n        console.log(response.data)\n        setDataRoti(response.data)\n      })\n      .catch((error) => {\n        // Handle error jika terjadi kesalahan saat mengambil data dari API\n        console.error('Error fetching data:', error)\n      })\n  }, [])\n\n  function handleEdit(data) {\n    localStorage.setItem(\n      'lsDataRoti',\n      JSON.stringify({\n        kode_roti: data.kode_roti,\n        nama_roti: data.nama_roti,\n        stok_roti: data.stok_roti,\n        rasa_roti: data.rasa_roti,\n        harga_satuan_roti: data.harga_satuan_roti,\n      }),\n    )\n    navigate('/roti/update')\n  }\n\n  const handleDelete = (data) => {\n    Swal.fire({\n      title: `Apakah anda yakin ingin menghapus ${data.kode_roti}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Delete',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        axios\n          .delete(\n            `https://be-myroti-production.up.railway.app/api/koordinator/dataroti/delete/${data.kode_roti}`,\n          )\n          .then((response) => {\n            Swal.fire('Deleted!', 'Your file has been deleted.', 'success')\n            window.location.href = '/roti'\n          })\n          .catch((error) => {\n            console.error('Error deleting data:', error)\n          })\n      }\n    })\n  }\n\n  const searchableFields = ['kode_roti', 'nama_roti', 'stok_roti', 'rasa_roti', 'harga_satuan_roti']\n\n  const filteredData = dataRoti.filter((roti) => {\n    return (\n      searchText === '' ||\n      searchableFields.some((field) => {\n        const fieldValue = roti[field]\n\n        // Check if the field value is a string before applying toLowerCase()\n        return (\n          typeof fieldValue === 'string' &&\n          fieldValue.toLowerCase().includes(searchText.toLowerCase())\n        )\n      })\n    )\n  })\n\n  const startIndex = (currentPage - 1) * itemsPerPage\n  const endIndex = itemsPerPage === dataRoti.length ? dataRoti.length : startIndex + itemsPerPage\n  const paginatedData = filteredData.slice(startIndex, endIndex)\n\n  const handleItemsPerPageChange = (value) => {\n    setCurrentPage(1)\n    setItemsPerPage(value)\n  }\n\n  const startRange = startIndex + 1\n  const endRange = Math.min(startIndex + itemsPerPage, filteredData.length)\n  const isDataEmpty = filteredData.length === 0\n\n  return (\n    <div>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>Data Roti</CCardHeader>\n            <CCardBody>\n              <CForm className=\"mb-3\">\n                <CRow>\n                  <CCol md={6} xs={8}>\n                    <CInputGroup>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        value={searchText}\n                        onChange={(e) => setSearchText(e.target.value)}\n                      />\n                      <CButton variant=\"outline\" className=\"ms-2\">\n                        <CIcon icon={cilSearch} />\n                      </CButton>\n                    </CInputGroup>\n                  </CCol>\n                  <CCol md={2} xs={4}>\n                    <Link to=\"/roti/tambah\">\n                      <CButton variant=\"outline\">\n                        <CIcon icon={cilBurger} className=\"mx-8 me-2\" />\n                        Tambah Roti\n                      </CButton>\n                    </Link>\n                  </CCol>\n                  <CCol md={2} xs={3}>\n                    <CFormLabel>Rows Per Page:</CFormLabel>\n                  </CCol>\n                  <CCol md={2} xs={3}>\n                    <CFormSelect\n                      className=\"form-select\"\n                      value={itemsPerPage}\n                      onChange={(e) => handleItemsPerPageChange(parseInt(e.target.value))}\n                    >\n                      {itemsPerPageOptions.map((option) => (\n                        <option key={option} value={option}>\n                          {option === dataRoti.length ? 'All' : option}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </CCol>\n                </CRow>\n              </CForm>\n              <CTable striped bordered responsive>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell>No</CTableHeaderCell>\n                    <CTableHeaderCell>Nama Roti</CTableHeaderCell>\n                    <CTableHeaderCell>Stok Roti</CTableHeaderCell>\n                    <CTableHeaderCell>Rasa Roti</CTableHeaderCell>\n                    <CTableHeaderCell>Harga Satuan</CTableHeaderCell>\n                    <CTableHeaderCell>Aksi</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {paginatedData.length === 0 ? (\n                    <tr>\n                      <td colSpan=\"6\" className=\"text-center\">\n                        Tidak ada data.\n                      </td>\n                    </tr>\n                  ) : (\n                    paginatedData.map((user, index) => (\n                      <CTableRow key={index}>\n                        <CTableDataCell>{startIndex + index + 1}</CTableDataCell>\n                        <CTableDataCell>{user.nama_roti}</CTableDataCell>\n                        <CTableDataCell>{user.stok_roti}</CTableDataCell>\n                        <CTableDataCell>{user.rasa_roti}</CTableDataCell>\n                        <CTableDataCell>{user.harga_satuan_roti}</CTableDataCell>\n                        <CTableDataCell>\n                          <CCol>\n                            <CButton\n                              color=\"primary\"\n                              variant=\"outline\"\n                              className=\"ms-2\"\n                              title=\"Edit Data Roti\"\n                              onClick={() => handleEdit(user)}\n                            >\n                              <CIcon icon={cilPen} />\n                            </CButton>\n                            <CButton\n                              color=\"danger\"\n                              variant=\"outline\"\n                              className=\"ms-2\"\n                              title=\"Hapus Data Roti\"\n                              onClick={() => handleDelete(user)}\n                            >\n                              <CIcon icon={cilTrash} />\n                            </CButton>\n                          </CCol>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  )}\n                </CTableBody>\n              </CTable>\n              <CRow className=\"mt-2 mb-2\">\n                <CCol md={4} xs={8}>\n                  Total Rows: {filteredData.length} Page: {startRange} of {endRange}\n                </CCol>\n              </CRow>\n              <CPagination\n                activepage={currentPage}\n                pages={Math.ceil(filteredData.length / itemsPerPage)}\n                onActivePageChange={setCurrentPage}\n                align=\"center\"\n                doublearrows=\"false\"\n              >\n                <CPaginationItem\n                  onClick={() => !isDataEmpty && setCurrentPage(currentPage - 1)}\n                  disabled={currentPage === 1 || isDataEmpty}\n                  style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n                >\n                  Prev\n                </CPaginationItem>\n\n                {Array.from(\n                  { length: Math.ceil(filteredData.length / itemsPerPage) },\n                  (_, index) => {\n                    const pageIndex = index + 1\n                    const totalPages = Math.ceil(filteredData.length / itemsPerPage)\n\n                    // Display three consecutive pages centered around the current page\n                    if (\n                      (pageIndex >= currentPage - 1 && pageIndex <= currentPage + 1) ||\n                      totalPages <= 3 ||\n                      (currentPage === 1 && pageIndex <= 3) ||\n                      (currentPage === totalPages && pageIndex >= totalPages - 2)\n                    ) {\n                      return (\n                        <CPaginationItem\n                          key={pageIndex}\n                          active={pageIndex === currentPage}\n                          onClick={() => setCurrentPage(pageIndex)}\n                          style={{ cursor: 'pointer' }}\n                        >\n                          {pageIndex}\n                        </CPaginationItem>\n                      )\n                    }\n\n                    // Display ellipses for pages before the current page\n                    if (pageIndex === 1 && currentPage > 2) {\n                      return (\n                        <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                          ...\n                        </CPaginationItem>\n                      )\n                    }\n\n                    // Display ellipses for pages after the current page\n                    if (pageIndex === totalPages && currentPage < totalPages - 1) {\n                      return (\n                        <CPaginationItem key={pageIndex} disabled style={{ cursor: 'default' }}>\n                          ...\n                        </CPaginationItem>\n                      )\n                    }\n\n                    return null\n                  },\n                )}\n\n                <CPaginationItem\n                  onClick={() => !isDataEmpty && setCurrentPage(currentPage + 1)}\n                  disabled={\n                    currentPage === Math.ceil(filteredData.length / itemsPerPage) || isDataEmpty\n                  }\n                  style={{ cursor: isDataEmpty ? 'default' : 'pointer' }}\n                >\n                  Next\n                </CPaginationItem>\n              </CPagination>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default KelolaDataDataRoti\n","export var cilPen = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M345.994,42.019,179.531,208.481A646.3,646.3,0,0,0,25.325,456.521a24.845,24.845,0,0,0,6,25.708l.087.087a24.84,24.84,0,0,0,17.611,7.342,25.172,25.172,0,0,0,8.1-1.344,646.283,646.283,0,0,0,248.04-154.207L471.62,167.646A88.831,88.831,0,0,0,345.994,42.019ZM282.531,311.48A614.445,614.445,0,0,1,60.419,453.221,614.435,614.435,0,0,1,202.158,231.108l99.162-99.161,80.372,80.372ZM448.993,145.019l-44.674,44.673L323.947,109.32l44.674-44.674a56.832,56.832,0,1,1,80.372,80.373Z' class='ci-primary'/>\"];\n","export var cilSearch = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M479.6,399.716l-81.084-81.084-62.368-25.767A175.014,175.014,0,0,0,368,192c0-97.047-78.953-176-176-176S16,94.953,16,192,94.953,368,192,368a175.034,175.034,0,0,0,101.619-32.377l25.7,62.2L400.4,478.911a56,56,0,1,0,79.2-79.195ZM48,192c0-79.4,64.6-144,144-144s144,64.6,144,144S271.4,336,192,336,48,271.4,48,192ZM456.971,456.284a24.028,24.028,0,0,1-33.942,0l-76.572-76.572-23.894-57.835L380.4,345.771l76.573,76.572A24.028,24.028,0,0,1,456.971,456.284Z' class='ci-primary'/>\"];\n","export var cilTrash = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"];\n"],"names":["KelolaDataDataRoti","searchText","setSearchText","useState","dataRoti","setDataRoti","navigate","useNavigate","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","itemsPerPageOptions","length","useEffect","axios","get","then","response","console","log","data","catch","error","searchableFields","filteredData","filter","roti","some","field","fieldValue","toLowerCase","includes","startIndex","endIndex","paginatedData","slice","startRange","endRange","Math","min","isDataEmpty","_jsx","children","CRow","CCol","_jsxs","CCard","CCardHeader","CCardBody","CForm","className","md","xs","CInputGroup","CFormInput","type","placeholder","value","onChange","e","target","CButton","variant","CIcon","icon","cilSearch","Link","to","cilBurger","CFormLabel","CFormSelect","handleItemsPerPageChange","parseInt","map","option","CTable","striped","bordered","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","colSpan","user","index","CTableDataCell","nama_roti","stok_roti","rasa_roti","harga_satuan_roti","color","title","onClick","handleEdit","localStorage","setItem","JSON","stringify","kode_roti","cilPen","handleDelete","Swal","concat","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","window","location","href","cilTrash","CPagination","activepage","pages","ceil","onActivePageChange","align","doublearrows","CPaginationItem","disabled","style","cursor","Array","from","_","pageIndex","totalPages","active"],"sourceRoot":""}